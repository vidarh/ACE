
	xref _stdout
	xref _timer
	xref _MathBase
	xref _round
	xref _LVOSPFlt
	xref _LVOSPAdd
	xref _LVOSPCmp
	xref _AbsExecBase
	xref _LVOPermit
	xref _mouse
	xref _RPort
	xref _GfxBase
	xref _LVOMove
	xref _LVOSetAPen
	xref _LVODraw
	xref _fgdpen
	xref _SUB_PAUSE
	xref _inkey
	xref _ucase
	xref _strcpy
	xref _streq
	xref _absl
	xref lmul
	xref _MathTransBase
	xref _LVOSPSqrt
	xref _LVOForbid
	xref _SUB_LINE_LENGTH
	xref _SUB_MAX_LENGTH
	xref _LVOSPMul
	xref _area
	xref _bgpen
	xref _changetextcolor
	xref _areafill
	xref _rnd
	xref _LVOSPNeg
	xref _cls
	xref _locate
	xref _stringprints
	xref _printsLF
	xref lmulu
	xref _absw
	xref ace_ldiv
	xref _SUB_RND_SIGN
	xref _ACEalloc
	xref _beep
	xref _randomise
	xref _argcount
	xref _arg
	xref _Ustringprint
	xref _Ucodeprint
	xref _val
	xref _openscreen
	xref _change_text_font
	xref _palette
	xref _closescreen
	xref _SUB_GET_POINT
	xref _strsingle
	xref _SUB_SHOW_TRIANGLE
	xref _SUB_CHOICE
	xref _SUB_NEXT_GENERATION
	xref _SUB_IN_CLI
	xref _startup
	xref _cleanup
	xref _parse_cli_args
	xref _openmathffp
	xref _closemathffp
	xref _openmathtrans
	xref _closemathtrans
	xref _IntuitionBase
	xref _DosBase
	xref _opengfx
	xref _closegfx
	xref _openintuition
	xref _closeintuition
	xref _starterr
	xdef _EXIT_PROG
	xref _free_alloc

	SECTION code,CODE

	jsr	_startup
	cmpi.b	#1,_starterr
	bne.s	_START_PROG
	rts
_START_PROG:
	move.l	sp,_initialSP
	movem.l	d1-d7/a0-a6,-(sp)
	jsr	_parse_cli_args
	jsr	_openmathffp
	cmpi.b	#1,_starterr
	bne.s	_mathffp_ok
	jmp	_ABORT_PROG
_mathffp_ok:
	jsr	_openmathtrans
	cmpi.b	#1,_starterr
	bne.s	_mathtrans_ok
	jmp	_ABORT_PROG
_mathtrans_ok:
	jsr	_openintuition
	cmpi.b	#1,_starterr
	bne.s	_intuition_ok
	jmp	_ABORT_PROG
_intuition_ok:
	jsr	_opengfx
	cmpi.b	#1,_starterr
	bne.s	_gfx_ok
	jmp	_ABORT_PROG
_gfx_ok:
	link	a4,#-100

	move.l	#0,-4(a4)
	move.l	#$5,-(sp)
	move.l	(sp)+,-4(a4)
	move.l	#0,-8(a4)
	move.l	#0,-12(a4)
	jmp	_lab0
_SUB_IN_CLI:
	link	a5,#0
	move.l	_stdout,-(sp)
	move.l	#0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	bne.s	_lab1
	moveq	#0,d5
_lab1:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab2
	jmp	_lab3
_lab2:
	move.l	#-1,-(sp)
	move.l	(sp)+,-16(a4)
	jmp	_lab4
_lab3:
	move.l	#0,-(sp)
	move.l	(sp)+,-16(a4)
_lab4:
_EXIT_SUB_IN_CLI:
	unlk	a5
	rts	  
_lab0:
	jmp	_lab5
_SUB_PAUSE:
	link	a5,#-4
	jsr	_timer
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,-4(a5)
_lab6:
	jsr	_timer
	move.l	d0,-(sp)
	move.l	-4(a5),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	#$a,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPAdd(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	move.l	_MathBase,a6
	jsr	_LVOSPCmp(a6)
	blt.s	_lab7
	moveq	#0,d5
_lab7:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab8
	jmp	_lab9
_lab8:
	jmp	_lab6
_lab9:
_EXIT_SUB_PAUSE:
	unlk	a5
	rts	  
_lab5:
	jmp	_lab10
_SUB_GET_POINT:
	link	a5,#-8
	move.l	_AbsExecBase,a6
	jsr	_LVOPermit(a6)
_lab11:
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	jsr	_mouse
	move.w	d0,-(sp)
	not.w	(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab12
	jmp	_lab13
_lab12:
	jmp	_lab11
_lab13:
	move.l	-4(a5),-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	jsr	_mouse
	move.w	d0,-(sp)
	move.w	(sp)+,d0
	move.l	(sp)+,a0
	move.w	d0,(a0)
	move.l	-8(a5),-(sp)
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	jsr	_mouse
	move.w	d0,-(sp)
	move.w	(sp)+,d0
	move.l	(sp)+,a0
	move.w	d0,(a0)
	move.l	-4(a5),-(sp)
	move.l	(sp)+,a0
	move.w	(a0),-(sp)
	move.w	#3,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	sub.w	d1,d0
	move.w	d0,-(sp)
	move.l	-8(a5),-(sp)
	move.l	(sp)+,a0
	move.w	(a0),-(sp)
	move.w	#3,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	sub.w	d1,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	move.w	d0,_xmin
	move.w	d1,_ymin
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOMove(a6)
	move.l	-4(a5),-(sp)
	move.l	(sp)+,a0
	move.w	(a0),-(sp)
	move.w	#3,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	add.w	d1,d0
	move.w	d0,-(sp)
	move.l	-8(a5),-(sp)
	move.l	(sp)+,a0
	move.w	(a0),-(sp)
	move.w	#3,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	add.w	d1,d0
	move.w	d0,-(sp)
	move.w	_xmin,-(sp)
	move.w	_ymin,-(sp)
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOSetAPen(a6)
	move.w	(sp)+,_ymin
	move.w	(sp)+,_xmin
	move.w	(sp)+,d5
	move.w	(sp)+,d4
	move.w	_ymin,d3
	move.w	_xmin,d2
	move.w	d4,d0
	move.w	d3,d1
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVODraw(a6)
	move.w	d4,d0
	move.w	d5,d1
	jsr	_LVODraw(a6)
	move.w	d2,d0
	move.w	d5,d1
	jsr	_LVODraw(a6)
	move.w	d2,d0
	move.w	d3,d1
	jsr	_LVODraw(a6)
	move.w	_fgdpen,d0
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOSetAPen(a6)
	jsr	_SUB_PAUSE
_lab14:
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	jsr	_mouse
	move.w	d0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab15
	jmp	_lab16
_lab15:
	jmp	_lab14
_lab16:
_EXIT_SUB_GET_POINT:
	unlk	a5
	rts	  
_lab10:
	jmp	_lab17
_SUB_CHOICE:
	link	a5,#-8
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,-4(a5)
_lab18:
	jsr	_inkey
	move.l	d0,-(sp)
	move.l	(sp)+,a1
	lea	_tempstring0,a0
	jsr	_ucase
	move.l	a0,-(sp)
	pea	_stringvar0
	move.l	(sp)+,-8(a5)
	move.l	(sp)+,a1
	move.l	-8(a5),a0
	jsr	_strcpy
	move.l	-8(a5),-(sp)
	pea	_stringconst0
	move.l	(sp)+,a1
	move.l	(sp)+,a0
	jsr	_streq
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab19
	jmp	_lab20
_lab19:
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,-4(a5)
_lab20:
	move.l	-8(a5),-(sp)
	pea	_stringconst1
	move.l	(sp)+,a1
	move.l	(sp)+,a0
	jsr	_streq
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab21
	jmp	_lab22
_lab21:
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,-4(a5)
_lab22:
	move.l	-4(a5),-(sp)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	bne.s	_lab23
	moveq	#0,d5
_lab23:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab24
	jmp	_lab18
_lab24:
	move.l	-4(a5),-(sp)
	move.l	(sp)+,-28(a4)
_EXIT_SUB_CHOICE:
	unlk	a5
	rts	  
_lab17:
	jmp	_lab25
_SUB_LINE_LENGTH:
	link	a5,#-24
	move.l	_AbsExecBase,a6
	jsr	_LVOPermit(a6)
	move.l	-16(a5),-(sp)
	move.l	-8(a5),-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	sub.l	d1,d0
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_absl
	move.l	(sp)+,-20(a5)
	move.l	-12(a5),-(sp)
	move.l	-4(a5),-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	sub.l	d1,d0
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_absl
	move.l	(sp)+,-24(a5)
	move.l	-20(a5),-(sp)
	move.l	-20(a5),-(sp)
	jsr	lmul
	add.l	#8,sp
	move.l	d0,-(sp)
	move.l	-24(a5),-(sp)
	move.l	-24(a5),-(sp)
	jsr	lmul
	add.l	#8,sp
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	add.l	d1,d0
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	_MathTransBase,a6
	jsr	_LVOSPSqrt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,-32(a4)
_EXIT_SUB_LINE_LENGTH:
	unlk	a5
	rts	  
_lab25:
	jmp	_lab26
_SUB_MAX_LENGTH:
	link	a5,#-24
	move.l	_AbsExecBase,a6
	jsr	_LVOPermit(a6)
	move.l	-16(a5),-(sp)
	move.l	(sp)+,-20(a5)
	move.l	-4(a5),-(sp)
	move.l	(sp)+,-24(a5)
	pea	_stringconst2
	move.l	(sp)+,a1
	move.l	-20(a5),a0
	jsr	_strcpy
	move.l	-8(a5),-(sp)
	move.l	-24(a5),-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	bgt.s	_lab27
	moveq	#0,d5
_lab27:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab28
	jmp	_lab29
_lab28:
	move.l	-8(a5),-(sp)
	move.l	(sp)+,-24(a5)
	pea	_stringconst3
	move.l	(sp)+,a1
	move.l	-20(a5),a0
	jsr	_strcpy
_lab29:
	move.l	-12(a5),-(sp)
	move.l	-24(a5),-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	bgt.s	_lab30
	moveq	#0,d5
_lab30:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab31
	jmp	_lab32
_lab31:
	move.l	-12(a5),-(sp)
	move.l	(sp)+,-24(a5)
	pea	_stringconst4
	move.l	(sp)+,a1
	move.l	-20(a5),a0
	jsr	_strcpy
_lab32:
	move.l	-24(a5),-(sp)
	move.l	(sp)+,-36(a4)
_EXIT_SUB_MAX_LENGTH:
	unlk	a5
	rts	  
_lab26:
	jmp	_lab33
_SUB_SHOW_TRIANGLE:
	link	a5,#-126
	move.l	_AbsExecBase,a6
	jsr	_LVOPermit(a6)
	move.l	#0,-8(a5)
	move.w	#0,-10(a5)
	pea	_nullstring
	pea	_stringvar1
	move.l	(sp)+,-14(a5)
	move.l	(sp)+,a1
	move.l	-14(a5),a0
	jsr	_strcpy
	move.l	-4(a5),-(sp)
	move.l	(sp)+,-8(a5)
	move.l	-8(a5),a0
	move.w	0(a0),-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,-18(a5)
	move.l	-8(a5),a0
	move.w	2(a0),-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,-22(a5)
	move.l	-8(a5),a0
	move.w	4(a0),-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,-26(a5)
	move.l	-8(a5),a0
	move.w	6(a0),-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,-30(a5)
	move.l	-8(a5),a0
	move.w	8(a0),-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,-34(a5)
	move.l	-8(a5),a0
	move.w	10(a0),-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,-38(a5)
	move.l	-18(a5),-(sp)
	move.l	(sp)+,-46(a5)
	move.l	-22(a5),-(sp)
	move.l	(sp)+,-50(a5)
	move.l	-26(a5),-(sp)
	move.l	(sp)+,-54(a5)
	move.l	-30(a5),-(sp)
	move.l	(sp)+,-58(a5)
	move.l	_AbsExecBase,a6
	jsr	_LVOForbid(a6)
	move.l	-46(a5),-12(sp)
	move.l	-50(a5),-16(sp)
	move.l	-54(a5),-20(sp)
	move.l	-58(a5),-24(sp)
	jsr	_SUB_LINE_LENGTH
	move.l	-32(a4),-(sp)
	move.l	(sp)+,-42(a5)
	move.l	-18(a5),-(sp)
	move.l	(sp)+,-66(a5)
	move.l	-22(a5),-(sp)
	move.l	(sp)+,-70(a5)
	move.l	-34(a5),-(sp)
	move.l	(sp)+,-74(a5)
	move.l	-38(a5),-(sp)
	move.l	(sp)+,-78(a5)
	move.l	_AbsExecBase,a6
	jsr	_LVOForbid(a6)
	move.l	-66(a5),-12(sp)
	move.l	-70(a5),-16(sp)
	move.l	-74(a5),-20(sp)
	move.l	-78(a5),-24(sp)
	jsr	_SUB_LINE_LENGTH
	move.l	-32(a4),-(sp)
	move.l	(sp)+,-62(a5)
	move.l	-26(a5),-(sp)
	move.l	(sp)+,-86(a5)
	move.l	-30(a5),-(sp)
	move.l	(sp)+,-90(a5)
	move.l	-34(a5),-(sp)
	move.l	(sp)+,-94(a5)
	move.l	-38(a5),-(sp)
	move.l	(sp)+,-98(a5)
	move.l	_AbsExecBase,a6
	jsr	_LVOForbid(a6)
	move.l	-86(a5),-12(sp)
	move.l	-90(a5),-16(sp)
	move.l	-94(a5),-20(sp)
	move.l	-98(a5),-24(sp)
	jsr	_SUB_LINE_LENGTH
	move.l	-32(a4),-(sp)
	move.l	(sp)+,-82(a5)
	move.l	-42(a5),-(sp)
	move.l	(sp)+,-106(a5)
	move.l	-62(a5),-(sp)
	move.l	(sp)+,-110(a5)
	move.l	-82(a5),-(sp)
	move.l	(sp)+,-114(a5)
	move.l	a5,d0
	sub.l	#14,d0
	move.l	d0,a0
	move.l	(a0),-(sp)
	move.l	(sp)+,-118(a5)
	move.l	_AbsExecBase,a6
	jsr	_LVOForbid(a6)
	move.l	-106(a5),-12(sp)
	move.l	-110(a5),-16(sp)
	move.l	-114(a5),-20(sp)
	move.l	-118(a5),-24(sp)
	jsr	_SUB_MAX_LENGTH
	move.l	-36(a4),-(sp)
	move.l	(sp)+,-102(a5)
	move.l	-14(a5),-(sp)
	pea	_stringconst5
	move.l	(sp)+,a1
	move.l	(sp)+,a0
	jsr	_streq
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab34
	jmp	_lab35
_lab34:
	move.l	-38(a5),-(sp)
	move.l	-22(a5),-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	sub.l	d1,d0
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_absl
	move.l	(sp)+,-122(a5)
	jmp	_lab40
_lab35:
	move.l	-14(a5),-(sp)
	pea	_stringconst6
	move.l	(sp)+,a1
	move.l	(sp)+,a0
	jsr	_streq
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab36
	jmp	_lab37
_lab36:
	move.l	-30(a5),-(sp)
	move.l	-38(a5),-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	sub.l	d1,d0
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_absl
	move.l	(sp)+,-122(a5)
	jmp	_lab40
_lab37:
	move.l	-14(a5),-(sp)
	pea	_stringconst7
	move.l	(sp)+,a1
	move.l	(sp)+,a0
	jsr	_streq
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab38
	jmp	_lab39
_lab38:
	move.l	-22(a5),-(sp)
	move.l	-30(a5),-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	sub.l	d1,d0
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_absl
	move.l	(sp)+,-122(a5)
	jmp	_lab40
_lab39:
_lab40:
	move.l	#$2,-(sp)
	move.l	-102(a5),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-122(a5),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,-126(a5)
	move.l	-126(a5),-(sp)
	move.w	#1000,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	bgt.s	_lab41
	moveq	#0,d5
_lab41:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab42
	jmp	_lab43
_lab42:
	move.w	#0,-(sp)
	move.w	(sp)+,-10(a5)
	jmp	_lab65
_lab43:
	move.l	-126(a5),-(sp)
	move.w	#500,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	bgt.s	_lab44
	moveq	#0,d5
_lab44:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab45
	jmp	_lab46
_lab45:
	move.w	#1,-(sp)
	move.w	(sp)+,-10(a5)
	jmp	_lab65
_lab46:
	move.l	-126(a5),-(sp)
	move.w	#200,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	bgt.s	_lab47
	moveq	#0,d5
_lab47:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab48
	jmp	_lab49
_lab48:
	move.w	#2,-(sp)
	move.w	(sp)+,-10(a5)
	jmp	_lab65
_lab49:
	move.l	-126(a5),-(sp)
	move.w	#100,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	bgt.s	_lab50
	moveq	#0,d5
_lab50:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab51
	jmp	_lab52
_lab51:
	move.w	#3,-(sp)
	move.w	(sp)+,-10(a5)
	jmp	_lab65
_lab52:
	move.l	-126(a5),-(sp)
	move.w	#50,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	bgt.s	_lab53
	moveq	#0,d5
_lab53:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab54
	jmp	_lab55
_lab54:
	move.w	#4,-(sp)
	move.w	(sp)+,-10(a5)
	jmp	_lab65
_lab55:
	move.l	-126(a5),-(sp)
	move.w	#25,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	bgt.s	_lab56
	moveq	#0,d5
_lab56:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab57
	jmp	_lab58
_lab57:
	move.w	#5,-(sp)
	move.w	(sp)+,-10(a5)
	jmp	_lab65
_lab58:
	move.l	-126(a5),-(sp)
	move.w	#10,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	bgt.s	_lab59
	moveq	#0,d5
_lab59:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab60
	jmp	_lab61
_lab60:
	move.w	#6,-(sp)
	move.w	(sp)+,-10(a5)
	jmp	_lab65
_lab61:
	move.l	-126(a5),-(sp)
	move.w	#10,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	ble.s	_lab62
	moveq	#0,d5
_lab62:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab63
	jmp	_lab64
_lab63:
	move.w	#7,-(sp)
	move.w	(sp)+,-10(a5)
	jmp	_lab65
_lab64:
_lab65:
	move.l	-18(a5),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-22(a5),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_area
	move.l	-26(a5),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-30(a5),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_area
	move.l	-34(a5),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-38(a5),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_area
	move.l	-18(a5),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-22(a5),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_area
	move.w	-10(a5),-(sp)
	move.w	#5,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	add.w	d1,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d0
	move.w	d0,_fg
	move.w	d0,_fgdpen
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOSetAPen(a6)
	move.w	_bgpen,_bg
	move.w	_fg,d0
	move.w	_bg,d0
	jsr	_changetextcolor
	move.w	#0,d0
	jsr	_areafill
	move.l	-18(a5),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-22(a5),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOMove(a6)
	move.l	-26(a5),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-30(a5),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOSetAPen(a6)
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_LVODraw(a6)
	move.w	_fgdpen,d0
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOSetAPen(a6)
	move.l	-26(a5),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-30(a5),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOMove(a6)
	move.l	-34(a5),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-38(a5),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOSetAPen(a6)
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_LVODraw(a6)
	move.w	_fgdpen,d0
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOSetAPen(a6)
	move.l	-34(a5),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-38(a5),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOMove(a6)
	move.l	-18(a5),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-22(a5),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOSetAPen(a6)
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_LVODraw(a6)
	move.w	_fgdpen,d0
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOSetAPen(a6)
_EXIT_SUB_SHOW_TRIANGLE:
	unlk	a5
	rts	  
_lab33:
	jmp	_lab66
_SUB_RND_SIGN:
	link	a5,#0
	jsr	_rnd
	move.l	d0,-(sp)
	move.l	#$2,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	move.l	_MathBase,a6
	jsr	_LVOSPCmp(a6)
	blt.s	_lab67
	moveq	#0,d5
_lab67:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab68
	jmp	_lab69
_lab68:
	move.l	#$1,-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPNeg(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,-44(a4)
	jmp	_lab70
_lab69:
	move.l	#$1,-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,-44(a4)
_lab70:
_EXIT_SUB_RND_SIGN:
	unlk	a5
	rts	  
_lab66:
	jmp	_lab71
_SUB_NEXT_GENERATION:
	link	a5,#-92
	move.l	_AbsExecBase,a6
	jsr	_LVOPermit(a6)
	move.l	#0,-12(a5)
	move.l	#0,-16(a5)
	pea	_array0
	move.l	(sp)+,-20(a5)
	pea	_array1
	move.l	(sp)+,-24(a5)
	pea	_array2
	move.l	(sp)+,-28(a5)
	pea	_array3
	move.l	(sp)+,-32(a5)
	pea	_array4
	move.l	(sp)+,-36(a5)
	pea	_array5
	move.l	(sp)+,-40(a5)
	move.l	#0,-44(a5)
	jsr	_cls
	move.w	#3,-(sp)
	move.w	(sp)+,d0
	move.w	d0,_fg
	move.w	d0,_fgdpen
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOSetAPen(a6)
	move.w	_bgpen,_bg
	move.w	_fg,d0
	move.w	_bg,d0
	jsr	_changetextcolor
	move.w	#26,-(sp)
	move.w	#35,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_locate
	pea	_stringconst8
	move.l	(sp)+,a0
	jsr	_stringprints
	jsr	_printsLF
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	move.w	d0,_fg
	move.w	d0,_fgdpen
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOSetAPen(a6)
	move.w	_bgpen,_bg
	move.w	_fg,d0
	move.w	_bg,d0
	jsr	_changetextcolor
	move.w	#28,-(sp)
	move.w	#25,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_locate
	pea	_stringconst9
	move.l	(sp)+,a0
	jsr	_stringprints
	jsr	_printsLF
	move.l	-4(a5),-(sp)
	move.l	(sp)+,-12(a5)
_lab72:
	move.l	-12(a5),-(sp)
	move.l	#0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	bne.s	_lab73
	moveq	#0,d5
_lab73:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab74
	jmp	_lab88
_lab74:
	move.l	-12(a5),a0
	move.l	12(a0),-(sp)
	move.l	(sp)+,-44(a5)
	move.w	#1,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	d7,_tmpelement
	move.l	-12(a5),a0
	move.w	0(a0),-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	_tmpelement,d7
	move.l	-20(a5),a0
	move.l	(sp)+,0(a0,d7.L)
	move.w	#2,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	d7,_tmpelement
	move.l	-12(a5),a0
	move.w	2(a0),-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	_tmpelement,d7
	move.l	-20(a5),a0
	move.l	(sp)+,0(a0,d7.L)
	move.w	#1,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	d7,_tmpelement
	move.l	-12(a5),a0
	move.w	4(a0),-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	_tmpelement,d7
	move.l	-24(a5),a0
	move.l	(sp)+,0(a0,d7.L)
	move.w	#2,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	d7,_tmpelement
	move.l	-12(a5),a0
	move.w	6(a0),-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	_tmpelement,d7
	move.l	-24(a5),a0
	move.l	(sp)+,0(a0,d7.L)
	move.w	#1,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	d7,_tmpelement
	move.l	-12(a5),a0
	move.w	8(a0),-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	_tmpelement,d7
	move.l	-28(a5),a0
	move.l	(sp)+,0(a0,d7.L)
	move.w	#2,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	d7,_tmpelement
	move.l	-12(a5),a0
	move.w	10(a0),-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	_tmpelement,d7
	move.l	-28(a5),a0
	move.l	(sp)+,0(a0,d7.L)
	move.l	-12(a5),a0
	move.w	0(a0),-(sp)
	move.l	-12(a5),a0
	move.w	4(a0),-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	sub.w	d1,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d0
	jsr	_absw
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,-48(a5)
	move.l	-12(a5),a0
	move.w	2(a0),-(sp)
	move.l	-12(a5),a0
	move.w	6(a0),-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	sub.w	d1,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d0
	jsr	_absw
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,-52(a5)
	move.l	-12(a5),a0
	move.w	0(a0),-(sp)
	move.l	-12(a5),a0
	move.w	8(a0),-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	sub.w	d1,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d0
	jsr	_absw
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,-56(a5)
	move.l	-12(a5),a0
	move.w	2(a0),-(sp)
	move.l	-12(a5),a0
	move.w	10(a0),-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	sub.w	d1,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d0
	jsr	_absw
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,-60(a5)
	move.l	-12(a5),a0
	move.w	4(a0),-(sp)
	move.l	-12(a5),a0
	move.w	8(a0),-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	sub.w	d1,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d0
	jsr	_absw
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,-64(a5)
	move.l	-12(a5),a0
	move.w	6(a0),-(sp)
	move.l	-12(a5),a0
	move.w	10(a0),-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	sub.w	d1,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d0
	jsr	_absw
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,-68(a5)
	move.l	-12(a5),a0
	move.w	0(a0),-(sp)
	move.l	-12(a5),a0
	move.w	4(a0),-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	add.w	d1,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	ace_ldiv
	add.l	#8,sp
	move.l	d0,-(sp)
	move.l	(sp)+,-72(a5)
	move.l	-12(a5),a0
	move.w	2(a0),-(sp)
	move.l	-12(a5),a0
	move.w	6(a0),-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	add.w	d1,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	ace_ldiv
	add.l	#8,sp
	move.l	d0,-(sp)
	move.l	(sp)+,-76(a5)
	move.l	-12(a5),a0
	move.w	0(a0),-(sp)
	move.l	-12(a5),a0
	move.w	8(a0),-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	add.w	d1,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	ace_ldiv
	add.l	#8,sp
	move.l	d0,-(sp)
	move.l	(sp)+,-80(a5)
	move.l	-12(a5),a0
	move.w	2(a0),-(sp)
	move.l	-12(a5),a0
	move.w	10(a0),-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	add.w	d1,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	ace_ldiv
	add.l	#8,sp
	move.l	d0,-(sp)
	move.l	(sp)+,-84(a5)
	move.l	-12(a5),a0
	move.w	4(a0),-(sp)
	move.l	-12(a5),a0
	move.w	8(a0),-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	add.w	d1,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	ace_ldiv
	add.l	#8,sp
	move.l	d0,-(sp)
	move.l	(sp)+,-88(a5)
	move.l	-12(a5),a0
	move.w	6(a0),-(sp)
	move.l	-12(a5),a0
	move.w	10(a0),-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	add.w	d1,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	ace_ldiv
	add.l	#8,sp
	move.l	d0,-(sp)
	move.l	(sp)+,-92(a5)
	move.w	#1,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	d7,_tmpelement
	move.l	-72(a5),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	jsr	_rnd
	move.l	d0,-(sp)
	move.l	-8(a5),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-48(a5),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	jsr	_SUB_RND_SIGN
	move.l	-44(a4),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPAdd(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	_tmpelement,d7
	move.l	-32(a5),a0
	move.l	(sp)+,0(a0,d7.L)
	move.w	#2,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	d7,_tmpelement
	move.l	-76(a5),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	jsr	_rnd
	move.l	d0,-(sp)
	move.l	-8(a5),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-52(a5),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	jsr	_SUB_RND_SIGN
	move.l	-44(a4),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	#$1,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPAdd(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	_tmpelement,d7
	move.l	-32(a5),a0
	move.l	(sp)+,0(a0,d7.L)
	move.w	#1,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	d7,_tmpelement
	move.l	-80(a5),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	jsr	_rnd
	move.l	d0,-(sp)
	move.l	-8(a5),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-56(a5),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	jsr	_SUB_RND_SIGN
	move.l	-44(a4),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPAdd(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	_tmpelement,d7
	move.l	-36(a5),a0
	move.l	(sp)+,0(a0,d7.L)
	move.w	#2,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	d7,_tmpelement
	move.l	-84(a5),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	jsr	_rnd
	move.l	d0,-(sp)
	move.l	-8(a5),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-60(a5),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	jsr	_SUB_RND_SIGN
	move.l	-44(a4),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	#$1,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPAdd(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	_tmpelement,d7
	move.l	-36(a5),a0
	move.l	(sp)+,0(a0,d7.L)
	move.w	#1,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	d7,_tmpelement
	move.l	-88(a5),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	jsr	_rnd
	move.l	d0,-(sp)
	move.l	-8(a5),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-64(a5),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	jsr	_SUB_RND_SIGN
	move.l	-44(a4),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPAdd(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	_tmpelement,d7
	move.l	-40(a5),a0
	move.l	(sp)+,0(a0,d7.L)
	move.w	#2,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	d7,_tmpelement
	move.l	-92(a5),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	jsr	_rnd
	move.l	d0,-(sp)
	move.l	-8(a5),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-68(a5),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	jsr	_SUB_RND_SIGN
	move.l	-44(a4),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	#$1,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPAdd(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	_tmpelement,d7
	move.l	-40(a5),a0
	move.l	(sp)+,0(a0,d7.L)
	move.w	#1,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-20(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,0(a0)
	move.w	#2,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-20(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,2(a0)
	move.w	#1,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-32(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,4(a0)
	move.w	#2,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-32(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,6(a0)
	move.w	#1,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-36(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,8(a0)
	move.w	#2,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-36(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,10(a0)
	move.l	#16,-(sp)
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	_ACEalloc
	add.l	#8,sp
	move.l	d0,-(sp)
	move.l	(sp)+,-16(a5)
	moveq	#0,d0
	jsr	_mouse
	cmpi.l	#0,d0
	beq.s	_lab75
	jmp	QUIT
_lab75:
	move.l	-16(a5),-(sp)
	move.l	#0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	beq.s	_lab76
	moveq	#0,d5
_lab76:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab77
	jmp	_lab78
_lab77:
	move.l	#-1,-(sp)
	move.l	(sp)+,-48(a4)
	jsr	_beep
	jmp	_EXIT_SUB_NEXT_GENERATION
_lab78:
	move.l	-16(a5),-(sp)
	move.l	-12(a5),a0
	move.l	(sp)+,12(a0)
	move.l	-12(a5),a0
	move.l	12(a0),-(sp)
	move.l	(sp)+,-12(a5)
	move.w	#1,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-32(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,0(a0)
	move.w	#2,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-32(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,2(a0)
	move.w	#1,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-24(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,4(a0)
	move.w	#2,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-24(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,6(a0)
	move.w	#1,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-40(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,8(a0)
	move.w	#2,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-40(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,10(a0)
	move.l	#16,-(sp)
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	_ACEalloc
	add.l	#8,sp
	move.l	d0,-(sp)
	move.l	(sp)+,-16(a5)
	moveq	#0,d0
	jsr	_mouse
	cmpi.l	#0,d0
	beq.s	_lab79
	jmp	QUIT
_lab79:
	move.l	-16(a5),-(sp)
	move.l	#0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	beq.s	_lab80
	moveq	#0,d5
_lab80:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab81
	jmp	_lab82
_lab81:
	move.l	#-1,-(sp)
	move.l	(sp)+,-48(a4)
	jsr	_beep
	jmp	_EXIT_SUB_NEXT_GENERATION
_lab82:
	move.l	-16(a5),-(sp)
	move.l	-12(a5),a0
	move.l	(sp)+,12(a0)
	move.l	-12(a5),a0
	move.l	12(a0),-(sp)
	move.l	(sp)+,-12(a5)
	move.w	#1,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-32(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,0(a0)
	move.w	#2,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-32(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,2(a0)
	move.w	#1,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-40(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,4(a0)
	move.w	#2,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-40(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,6(a0)
	move.w	#1,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-36(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,8(a0)
	move.w	#2,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-36(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,10(a0)
	move.l	#16,-(sp)
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	_ACEalloc
	add.l	#8,sp
	move.l	d0,-(sp)
	move.l	(sp)+,-16(a5)
	moveq	#0,d0
	jsr	_mouse
	cmpi.l	#0,d0
	beq.s	_lab83
	jmp	QUIT
_lab83:
	move.l	-16(a5),-(sp)
	move.l	#0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	beq.s	_lab84
	moveq	#0,d5
_lab84:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab85
	jmp	_lab86
_lab85:
	move.l	#-1,-(sp)
	move.l	(sp)+,-48(a4)
	jsr	_beep
	jmp	_EXIT_SUB_NEXT_GENERATION
_lab86:
	move.l	-16(a5),-(sp)
	move.l	-12(a5),a0
	move.l	(sp)+,12(a0)
	move.l	-12(a5),a0
	move.l	12(a0),-(sp)
	move.l	(sp)+,-12(a5)
	move.w	#1,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-36(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,0(a0)
	move.w	#2,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-36(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,2(a0)
	move.w	#1,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-40(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,4(a0)
	move.w	#2,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-40(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,6(a0)
	move.w	#1,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-28(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,8(a0)
	move.w	#2,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-28(a5),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.w	(sp)+,10(a0)
	move.l	-44(a5),-(sp)
	move.l	-12(a5),a0
	move.l	(sp)+,12(a0)
	move.l	-12(a5),a0
	move.l	12(a0),-(sp)
	move.l	(sp)+,-12(a5)
	moveq	#0,d0
	jsr	_mouse
	cmpi.l	#0,d0
	beq.s	_lab87
	jmp	QUIT
_lab87:
	jmp	_lab72
_lab88:
	move.l	#0,-(sp)
	move.l	(sp)+,-48(a4)
_EXIT_SUB_NEXT_GENERATION:
	unlk	a5
	rts	  
_lab71:
	jsr	_timer
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_randomise
	jsr	_argcount
	move.l	d0,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	beq.s	_lab89
	moveq	#0,d5
_lab89:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab90
	jmp	_lab94
_lab90:
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	pea	_tempstring1
	jsr	_arg
	add.l	#8,sp
	move.l	d0,-(sp)
	pea	_stringconst10
	move.l	(sp)+,a1
	move.l	(sp)+,a0
	jsr	_streq
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab91
	jmp	_lab92
_lab91:
	pea	_stringconst11
	jsr	_Ustringprint
	addq	#4,sp
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	pea	_tempstring2
	jsr	_arg
	add.l	#8,sp
	move.l	d0,-(sp)
	jsr	_Ustringprint
	addq	#4,sp
	pea	_stringconst12
	jsr	_Ustringprint
	addq	#4,sp
	move.l	#0,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
	pea	_stringconst13
	jsr	_Ustringprint
	addq	#4,sp
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	pea	_tempstring3
	jsr	_arg
	add.l	#8,sp
	move.l	d0,-(sp)
	jsr	_Ustringprint
	addq	#4,sp
	pea	_stringconst14
	jsr	_Ustringprint
	addq	#4,sp
	move.l	#0,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
	jmp	_EXIT_PROG
	jmp	_lab93
_lab92:
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	pea	_tempstring4
	jsr	_arg
	add.l	#8,sp
	move.l	d0,-(sp)
	jsr	_val
	addq	#4,sp
	move.l	d0,-(sp)
	move.l	(sp)+,-4(a4)
_lab93:
_lab94:
	move.w	#1,-(sp)
	move.w	#640,-(sp)
	move.w	#425,-(sp)
	move.w	#4,-(sp)
	move.w	#4,-(sp)
	move.w	(sp)+,d4
	move.w	(sp)+,d3
	move.w	(sp)+,d2
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_openscreen
	pea	_stringconst15
	move.w	#8,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	_change_text_font
	add.l	#8,sp
	move.w	#0,-(sp)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d3
	move.l	(sp)+,d2
	move.l	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_palette
	move.w	#1,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d3
	move.l	(sp)+,d2
	move.l	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_palette
	move.w	#2,-(sp)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d3
	move.l	(sp)+,d2
	move.l	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_palette
	move.w	#3,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d3
	move.l	(sp)+,d2
	move.l	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_palette
	move.w	#4,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	#$7,-(sp)
	move.l	(sp)+,d3
	move.l	(sp)+,d2
	move.l	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_palette
	move.w	#5,-(sp)
	move.l	#$1,-(sp)
	move.l	#$1,-(sp)
	move.l	#$1,-(sp)
	move.l	(sp)+,d3
	move.l	(sp)+,d2
	move.l	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_palette
	move.w	#6,-(sp)
	move.l	#$1,-(sp)
	move.l	#$1,-(sp)
	move.l	#$1,-(sp)
	move.l	(sp)+,d3
	move.l	(sp)+,d2
	move.l	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_palette
	move.w	#7,-(sp)
	move.l	#$1,-(sp)
	move.l	#$1,-(sp)
	move.l	#$1,-(sp)
	move.l	(sp)+,d3
	move.l	(sp)+,d2
	move.l	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_palette
	move.w	#8,-(sp)
	move.l	#$1,-(sp)
	move.l	#$1,-(sp)
	move.l	#$1,-(sp)
	move.l	(sp)+,d3
	move.l	(sp)+,d2
	move.l	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_palette
	move.w	#9,-(sp)
	move.l	#$1,-(sp)
	move.l	#$1,-(sp)
	move.l	#$1,-(sp)
	move.l	(sp)+,d3
	move.l	(sp)+,d2
	move.l	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_palette
	move.w	#10,-(sp)
	move.l	#$2,-(sp)
	move.l	#$2,-(sp)
	move.l	#$2,-(sp)
	move.l	(sp)+,d3
	move.l	(sp)+,d2
	move.l	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_palette
	move.w	#11,-(sp)
	move.l	#$3,-(sp)
	move.l	#$3,-(sp)
	move.l	#$3,-(sp)
	move.l	(sp)+,d3
	move.l	(sp)+,d2
	move.l	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_palette
	move.w	#12,-(sp)
	move.l	#$4,-(sp)
	move.l	#$4,-(sp)
	move.l	#$4,-(sp)
	move.l	(sp)+,d3
	move.l	(sp)+,d2
	move.l	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_palette
_lab95:
	move.l	#16,-(sp)
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	_ACEalloc
	add.l	#8,sp
	move.l	d0,-(sp)
	move.l	(sp)+,-8(a4)
	move.l	-8(a4),-(sp)
	move.l	#0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	beq.s	_lab96
	moveq	#0,d5
_lab96:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab97
	jmp	_lab98
_lab97:
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	jsr	_closescreen
	jsr	_beep
	jmp	_EXIT_PROG
	jmp	_lab99
_lab98:
	move.l	#0,-(sp)
	move.l	-8(a4),a0
	move.l	(sp)+,12(a0)
_lab99:
	jsr	_cls
	move.w	#4,-(sp)
	move.w	(sp)+,d0
	move.w	d0,_fg
	move.w	d0,_fgdpen
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOSetAPen(a6)
	move.w	_bgpen,_bg
	move.w	_fg,d0
	move.w	_bg,d0
	jsr	_changetextcolor
	move.w	#30,-(sp)
	move.w	#27,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_locate
	pea	_stringconst16
	move.l	(sp)+,a0
	jsr	_stringprints
	jsr	_printsLF
	move.l	a4,d0
	sub.l	#8,d0
	movea.l	d0,a0
	movea.l	(a0),a0
	adda.l	#0,a0
	move.l	a0,-(sp)
	move.l	(sp)+,-52(a4)
	move.l	a4,d0
	sub.l	#8,d0
	movea.l	d0,a0
	movea.l	(a0),a0
	adda.l	#2,a0
	move.l	a0,-(sp)
	move.l	(sp)+,-56(a4)
	move.l	_AbsExecBase,a6
	jsr	_LVOForbid(a6)
	move.l	-52(a4),-12(sp)
	move.l	-56(a4),-16(sp)
	jsr	_SUB_GET_POINT
	move.l	a4,d0
	sub.l	#8,d0
	movea.l	d0,a0
	movea.l	(a0),a0
	adda.l	#4,a0
	move.l	a0,-(sp)
	move.l	(sp)+,-60(a4)
	move.l	a4,d0
	sub.l	#8,d0
	movea.l	d0,a0
	movea.l	(a0),a0
	adda.l	#6,a0
	move.l	a0,-(sp)
	move.l	(sp)+,-64(a4)
	move.l	_AbsExecBase,a6
	jsr	_LVOForbid(a6)
	move.l	-60(a4),-12(sp)
	move.l	-64(a4),-16(sp)
	jsr	_SUB_GET_POINT
	move.l	a4,d0
	sub.l	#8,d0
	movea.l	d0,a0
	movea.l	(a0),a0
	adda.l	#8,a0
	move.l	a0,-(sp)
	move.l	(sp)+,-68(a4)
	move.l	a4,d0
	sub.l	#8,d0
	movea.l	d0,a0
	movea.l	(a0),a0
	adda.l	#10,a0
	move.l	a0,-(sp)
	move.l	(sp)+,-72(a4)
	move.l	_AbsExecBase,a6
	jsr	_LVOForbid(a6)
	move.l	-68(a4),-12(sp)
	move.l	-72(a4),-16(sp)
	jsr	_SUB_GET_POINT
	move.l	#0,-(sp)
	move.l	(sp)+,-76(a4)
_lab100:
	jsr	_cls
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	move.w	d0,_fg
	move.w	d0,_fgdpen
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOSetAPen(a6)
	move.w	_bgpen,_bg
	move.w	_fg,d0
	move.w	_bg,d0
	jsr	_changetextcolor
	move.w	#44,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_locate
	pea	_stringconst17
	move.l	(sp)+,a0
	jsr	_stringprints
	move.w	#4,-(sp)
	move.w	(sp)+,d0
	move.w	d0,_fg
	move.w	d0,_fgdpen
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOSetAPen(a6)
	move.w	_bgpen,_bg
	move.w	_fg,d0
	move.w	_bg,d0
	jsr	_changetextcolor
	move.l	-4(a4),-(sp)
	move.w	#100,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	lea	_tempstring5,a0
	jsr	_strsingle
	addq	#4,sp
	move.l	d0,-(sp)
	move.l	(sp)+,a0
	jsr	_stringprints
	pea	_stringconst18
	move.l	(sp)+,a0
	jsr	_stringprints
	jsr	_printsLF
	move.l	-8(a4),-(sp)
	move.l	(sp)+,-12(a4)
_lab101:
	move.l	-12(a4),-(sp)
	move.l	#0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	bne.s	_lab102
	moveq	#0,d5
_lab102:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab103
	jmp	_lab104
_lab103:
	move.l	-12(a4),-(sp)
	move.l	(sp)+,-80(a4)
	move.l	_AbsExecBase,a6
	jsr	_LVOForbid(a6)
	move.l	-80(a4),-12(sp)
	jsr	_SUB_SHOW_TRIANGLE
	move.l	-12(a4),a0
	move.l	12(a0),-(sp)
	move.l	(sp)+,-12(a4)
	jmp	_lab101
_lab104:
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	move.w	d0,_fg
	move.w	d0,_fgdpen
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOSetAPen(a6)
	move.w	_bgpen,_bg
	move.w	_fg,d0
	move.w	_bg,d0
	jsr	_changetextcolor
	move.w	#46,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_locate
	pea	_stringconst19
	move.l	(sp)+,a0
	jsr	_stringprints
	jsr	_printsLF
	move.w	#3,-(sp)
	move.w	(sp)+,d0
	move.w	d0,_fg
	move.w	d0,_fgdpen
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOSetAPen(a6)
	move.w	_bgpen,_bg
	move.w	_fg,d0
	move.w	_bg,d0
	jsr	_changetextcolor
	move.w	#48,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_locate
	pea	_stringconst20
	move.l	(sp)+,a0
	jsr	_stringprints
	jsr	_printsLF
	jsr	_SUB_CHOICE
	move.l	-28(a4),-(sp)
	move.l	(sp)+,-84(a4)
	move.l	-84(a4),-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	beq.s	_lab105
	moveq	#0,d5
_lab105:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab106
	jmp	_lab107
_lab106:
	move.l	-8(a4),-(sp)
	move.l	(sp)+,-88(a4)
	move.l	-4(a4),-(sp)
	move.l	(sp)+,-92(a4)
	move.l	_AbsExecBase,a6
	jsr	_LVOForbid(a6)
	move.l	-88(a4),-12(sp)
	move.l	-92(a4),-16(sp)
	jsr	_SUB_NEXT_GENERATION
	move.l	-48(a4),-(sp)
	move.l	(sp)+,-76(a4)
	jmp	_lab108
_lab107:
	move.l	#-1,-(sp)
	move.l	(sp)+,-76(a4)
_lab108:
	move.l	-76(a4),-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab109
	jmp	_lab100
_lab109:
QUIT:
	move.w	#4,-(sp)
	move.w	(sp)+,d0
	move.w	d0,_fg
	move.w	d0,_fgdpen
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOSetAPen(a6)
	move.w	_bgpen,_bg
	move.w	_fg,d0
	move.w	_bg,d0
	jsr	_changetextcolor
	move.w	#48,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_locate
	pea	_stringconst21
	move.l	(sp)+,a0
	jsr	_stringprints
	jsr	_printsLF
_lab110:
	jsr	_inkey
	move.l	d0,-(sp)
	move.l	(sp)+,a1
	lea	_tempstring6,a0
	jsr	_ucase
	move.l	a0,-(sp)
	pea	_stringvar2
	move.l	(sp)+,-96(a4)
	move.l	(sp)+,a1
	move.l	-96(a4),a0
	jsr	_strcpy
	move.l	-96(a4),-(sp)
	pea	_stringconst22
	move.l	(sp)+,a1
	move.l	(sp)+,a0
	jsr	_streq
	move.l	d0,-(sp)
	move.l	-96(a4),-(sp)
	pea	_stringconst23
	move.l	(sp)+,a1
	move.l	(sp)+,a0
	jsr	_streq
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	or.l	d1,d0
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab111
	jmp	_lab110
_lab111:
	move.l	-96(a4),-(sp)
	pea	_stringconst24
	move.l	(sp)+,a1
	move.l	(sp)+,a0
	jsr	_streq
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab112
	jmp	_lab113
_lab112:
	move.l	#-1,-(sp)
	move.l	(sp)+,-100(a4)
	jmp	_lab114
_lab113:
	move.l	#0,-(sp)
	move.l	(sp)+,-100(a4)
_lab114:
	move.l	-100(a4),-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab115
	jmp	_lab95
_lab115:
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	jsr	_closescreen
	jsr	_SUB_IN_CLI
	move.l	-16(a4),-(sp)
	move.l	#0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	bne.s	_lab116
	moveq	#0,d5
_lab116:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab117
	jmp	_lab118
_lab117:
	pea	_stringconst25
	jsr	_Ustringprint
	addq	#4,sp
	move.l	#0,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
_lab118:

_EXIT_PROG:
	unlk	a4
_ABORT_PROG:
	jsr	_free_alloc
	jsr	_closegfx
	jsr	_closeintuition
	jsr	_closemathtrans
	jsr	_closemathffp
	movem.l	(sp)+,d1-d7/a0-a6
	move.l	_initialSP,sp
	jsr	_cleanup

	rts

	SECTION data,DATA

_stringconst0:	dc.b "Q",0
_stringconst1:	dc.b "C",0
_stringconst2:	dc.b "ab",0
_stringconst3:	dc.b "ac",0
_stringconst4:	dc.b "bc",0
_nullstring:	dc.b 0
_stringconst5:	dc.b "ab",0
_stringconst6:	dc.b "ac",0
_stringconst7:	dc.b "bc",0
_stringconst8:	dc.b "Generating",0
_stringconst9:	dc.b "press left mouse button to stop",0
_stringconst10:	dc.b "?",0
_stringconst11:	dc.b "usage: ",0
_stringconst12:	dc.b " [distortion]",0
_stringconst13:	dc.b "   eg: ",0
_stringconst14:	dc.b " .1",0
_stringconst15:	dc.b "topaz",0
_stringconst16:	dc.b "Select 3 points with mouse",0
_stringconst17:	dc.b "Distortion:",0
_stringconst18:	dc.b "%",0
_stringconst19:	dc.b "C to continue.",0
_stringconst20:	dc.b "Q to quit.",0
_stringconst21:	dc.b "Q to quit program. R to restart.",0
_stringconst22:	dc.b "Q",0
_stringconst23:	dc.b "R",0
_stringconst24:	dc.b "Q",0
_stringconst25:	dc.b "Freeing allocated memory.",0

	SECTION mem,BSS

_xmin	ds.w 1
_ymin	ds.w 1
_tempstring0:	ds.b 1024
_stringvar0:	ds.b 1024
_stringvar1:	ds.b 1024
_fg	ds.w 1
_bg	ds.w 1
_array0:	ds.l 3
_array1:	ds.l 3
_array2:	ds.l 3
_array3:	ds.l 3
_array4:	ds.l 3
_array5:	ds.l 3
_tmpelement	ds.l 1
_tempstring1:	ds.b 1024
_tempstring2:	ds.b 1024
_tempstring3:	ds.b 1024
_tempstring4:	ds.b 1024
_tempstring5:	ds.b 1024
_tempstring6:	ds.b 1024
_stringvar2:	ds.b 1024
_initialSP:	ds.l 1

	END
