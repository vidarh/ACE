
	xref _AbsExecBase
	xref _LVOPermit
	xref _MathBase
	xref _LVOSPFlt
	xref _LVOSPCmp
	xref _LVOSPSub
	xref _LVOForbid
	xref _SUB_FACT
	xref _LVOSPMul
	xref _Ucodeprint
	xref _Ustringprint
	xref _inputsingle
	xref _MathTransBase
	xref _Usingleprint
	xref _startup
	xref _cleanup
	xref _openmathffp
	xref _closemathffp
	xref _openmathtrans
	xref _closemathtrans
	xref _GfxBase
	xref _IntuitionBase
	xref _DosBase
	xref _opengfx
	xref _closegfx
	xref _openintuition
	xref _closeintuition
	xref _starterr
	xdef _EXIT_PROG
	xref _free_alloc

	SECTION code,CODE

	jsr	_startup
	cmpi.b	#1,_starterr
	bne.s	_START_PROG
	rts
_START_PROG:
	move.l	sp,_initialSP
	movem.l	d1-d7/a0-a6,-(sp)
	jsr	_openmathffp
	cmpi.b	#1,_starterr
	bne.s	_mathffp_ok
	jmp	_ABORT_PROG
_mathffp_ok:
	jsr	_openmathtrans
	cmpi.b	#1,_starterr
	bne.s	_mathtrans_ok
	jmp	_ABORT_PROG
_mathtrans_ok:
	jsr	_openintuition
	cmpi.b	#1,_starterr
	bne.s	_intuition_ok
	jmp	_ABORT_PROG
_intuition_ok:
	jsr	_opengfx
	cmpi.b	#1,_starterr
	bne.s	_gfx_ok
	jmp	_ABORT_PROG
_gfx_ok:
	link	a4,#-12

	jmp	_lab0
_SUB_FACT:
	link	a5,#-8
	move.l	_AbsExecBase,a6
	jsr	_LVOPermit(a6)
	move.l	-4(a5),-(sp)
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	move.l	_MathBase,a6
	jsr	_LVOSPCmp(a6)
	blt.s	_lab1
	moveq	#0,d5
_lab1:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab2
	jmp	_lab3
_lab2:
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-4(a4)
	jmp	_lab4
_lab3:
	move.l	-4(a5),-(sp)
	move.l	-4(a5),-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPSub(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-8(a5)
	move.l	_AbsExecBase,a6
	jsr	_LVOForbid(a6)
	move.l	-8(a5),-12(sp)
	jsr	_SUB_FACT
	move.l	-4(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-4(a4)
_lab4:
_EXIT_SUB_FACT:
	unlk	a5
	rts	  
_lab0:
_lab5:
	move.l	#0,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
_lab6:
	pea	_stringconst0
	jsr	_Ustringprint
	addq	#4,sp
	lea	_tempstring0,a0
	jsr	_inputsingle
	move.l	d0,-8(a4)
	move.l	-8(a4),-(sp)
	move.w	#1,-(sp)
	neg.w	(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	move.l	_MathBase,a6
	jsr	_LVOSPCmp(a6)
	bge.s	_lab7
	moveq	#0,d5
_lab7:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab8
	jmp	_lab6
_lab8:
	move.l	-8(a4),-(sp)
	move.w	#1,-(sp)
	neg.w	(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	move.l	_MathBase,a6
	jsr	_LVOSPCmp(a6)
	bne.s	_lab9
	moveq	#0,d5
_lab9:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab10
	jmp	_lab11
_lab10:
	pea	_stringconst1
	jsr	_Ustringprint
	addq	#4,sp
	move.l	-8(a4),-(sp)
	move.l	(sp)+,-12(a4)
	move.l	_AbsExecBase,a6
	jsr	_LVOForbid(a6)
	move.l	-12(a4),-12(sp)
	jsr	_SUB_FACT
	move.l	-4(a4),-(sp)
	jsr	_Usingleprint
	addq	#4,sp
	move.l	#2,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
	move.l	#0,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
_lab11:
	move.l	-8(a4),-(sp)
	move.w	#1,-(sp)
	neg.w	(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	move.l	_MathBase,a6
	jsr	_LVOSPCmp(a6)
	beq.s	_lab12
	moveq	#0,d5
_lab12:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab13
	jmp	_lab5
_lab13:

_EXIT_PROG:
	unlk	a4
_ABORT_PROG:
	jsr	_free_alloc
	jsr	_closegfx
	jsr	_closeintuition
	jsr	_closemathtrans
	jsr	_closemathffp
	movem.l	(sp)+,d1-d7/a0-a6
	move.l	_initialSP,sp
	jsr	_cleanup

	rts

	SECTION data,DATA

_stringconst0:	dc.b "Enter an integer (0 or higher, -1 to stop): ",0
_stringconst1:	dc.b "-->>",0

	SECTION mem,BSS

_tempstring0:	ds.b 1024
_initialSP:	ds.l 1

	END
