
	xref _OpenWdw
	xref _MathBase
	xref _LVOSPFlt
	xref _RPort
	xref _GfxBase
	xref _LVOSetAPen
	xref _fgdpen
	xref _LVOSetBPen
	xref _bgpen
	xref _changetextcolor
	xref _cls
	xref _htol
	xref _strlen
	xref _LVOSPCmp
	xref _round
	xref lmulu
	xref _LVOSPMul
	xref _LVOSPAdd
	xref _Ustringprint
	xref _Ucodeprint
	xref _inputsingle
	xref _MathTransBase
	xref _LVOSPDiv
	xref _LVOSPSub
	xref _LVOSPNeg
	xref _absf
	xref _LVOMove
	xref _LVODraw
	xref _locate
	xref _strcpy
	xref _strne
	xref _inkey
	xref _ucase
	xref _sleep
	xref _streq
	xref _LVOSPCos
	xref _LVOSPSin
	xref _CloseWdw
	xref _startup
	xref _cleanup
	xref _openmathffp
	xref _closemathffp
	xref _openmathtrans
	xref _closemathtrans
	xref _IntuitionBase
	xref _DosBase
	xref _opengfx
	xref _closegfx
	xref _openintuition
	xref _closeintuition
	xref _starterr
	xdef _EXIT_PROG
	xref _free_alloc

	SECTION code,CODE

	jsr	_startup
	cmpi.b	#1,_starterr
	bne.s	_START_PROG
	rts
_START_PROG:
	move.l	sp,_initialSP
	movem.l	d1-d7/a0-a6,-(sp)
	jsr	_openmathffp
	cmpi.b	#1,_starterr
	bne.s	_mathffp_ok
	jmp	_ABORT_PROG
_mathffp_ok:
	jsr	_openmathtrans
	cmpi.b	#1,_starterr
	bne.s	_mathtrans_ok
	jmp	_ABORT_PROG
_mathtrans_ok:
	jsr	_openintuition
	cmpi.b	#1,_starterr
	bne.s	_intuition_ok
	jmp	_ABORT_PROG
_intuition_ok:
	jsr	_opengfx
	cmpi.b	#1,_starterr
	bne.s	_gfx_ok
	jmp	_ABORT_PROG
_gfx_ok:
	link	a4,#-168

	move.l	#_BASICdata,_dataptr
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	pea	_stringconst0
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#631,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#186,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	#0,-(sp)
	jsr	_OpenWdw
	add.l	#32,sp
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-4(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-8(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-12(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-16(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-20(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-24(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-28(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-32(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-36(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-40(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-44(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-48(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-52(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-56(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-60(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-64(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-68(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-72(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-76(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-80(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-84(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-88(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-92(a4)
	pea	_array0
	move.l	(sp)+,-96(a4)
	pea	_array1
	move.l	(sp)+,-100(a4)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	move.w	d0,_fg
	move.w	d0,_fgdpen
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOSetAPen(a6)
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	move.w	d0,_bg
	move.w	d0,_bgpen
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOSetBPen(a6)
	move.w	_fg,d0
	move.w	_bg,d0
	jsr	_changetextcolor
	jsr	_cls
	move.l	_dataptr,a1
	jsr	_htol
	move.l	d0,-104(a4)
	move.l	_dataptr,a2
	jsr	_strlen
	addq	#1,d0
	move.l	_dataptr,d1
	add.l	d0,d1
	move.l	d1,_dataptr
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-68(a4)
	move.l	-104(a4),-(sp)
	move.l	#$80000041,-(sp)
_lab0:
	moveq	#0,d1
	move.l	(sp),d0
	move.l	_MathBase,a6
	jsr	_LVOSPCmp(a6)
	blt.s	_lab1
	move.l	-68(a4),d0
	move.l	4(sp),d1
	move.l	_MathBase,a6
	jsr	_LVOSPCmp(a6)
	bgt	_lab3
	jmp	_lab2
_lab1:
	move.l	-68(a4),d0
	move.l	4(sp),d1
	move.l	_MathBase,a6
	jsr	_LVOSPCmp(a6)
	blt	_lab3
_lab2:
	move.l	-68(a4),-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	#1,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#4,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-96(a4),a2
	move.l	_dataptr,a1
	jsr	_htol
	move.l	d0,0(a2,d7.L)
	move.l	_dataptr,a2
	jsr	_strlen
	addq	#1,d0
	move.l	_dataptr,d1
	add.l	d0,d1
	move.l	d1,_dataptr
	move.l	-68(a4),-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	#2,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#4,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-96(a4),a2
	move.l	_dataptr,a1
	jsr	_htol
	move.l	d0,0(a2,d7.L)
	move.l	_dataptr,a2
	jsr	_strlen
	addq	#1,d0
	move.l	_dataptr,d1
	add.l	d0,d1
	move.l	d1,_dataptr
	move.l	-68(a4),-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	#3,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#4,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-96(a4),a2
	move.l	_dataptr,a1
	jsr	_htol
	move.l	d0,0(a2,d7.L)
	move.l	_dataptr,a2
	jsr	_strlen
	addq	#1,d0
	move.l	_dataptr,d1
	add.l	d0,d1
	move.l	d1,_dataptr
	move.l	-68(a4),-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	#1,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#4,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	d7,_tmpelement
	move.l	#$8,-(sp)
	move.l	-68(a4),-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	#1,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#4,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-96(a4),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	_tmpelement,d7
	move.l	-96(a4),a0
	move.l	(sp)+,0(a0,d7.L)
	move.l	-68(a4),-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	#2,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#4,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	d7,_tmpelement
	move.l	#$8,-(sp)
	move.l	-68(a4),-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	#2,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#4,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-96(a4),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	_tmpelement,d7
	move.l	-96(a4),a0
	move.l	(sp)+,0(a0,d7.L)
	move.l	-68(a4),-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	#3,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#4,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	d7,_tmpelement
	move.l	#$8,-(sp)
	move.l	-68(a4),-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	#3,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#4,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-96(a4),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	_tmpelement,d7
	move.l	-96(a4),a0
	move.l	(sp)+,0(a0,d7.L)
	move.l	(sp),d0
	move.l	-68(a4),d1
	move.l	_MathBase,a6
	jsr	_LVOSPAdd(a6)
	move.l	d0,-68(a4)
	jmp	_lab0
_lab3:
	add.l	#8,sp
	move.l	_dataptr,a1
	jsr	_htol
	move.l	d0,-108(a4)
	move.l	_dataptr,a2
	jsr	_strlen
	addq	#1,d0
	move.l	_dataptr,d1
	add.l	d0,d1
	move.l	d1,_dataptr
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-112(a4)
	move.l	-108(a4),-(sp)
	move.l	#$80000041,-(sp)
_lab4:
	moveq	#0,d1
	move.l	(sp),d0
	move.l	_MathBase,a6
	jsr	_LVOSPCmp(a6)
	blt.s	_lab5
	move.l	-112(a4),d0
	move.l	4(sp),d1
	move.l	_MathBase,a6
	jsr	_LVOSPCmp(a6)
	bgt	_lab7
	jmp	_lab6
_lab5:
	move.l	-112(a4),d0
	move.l	4(sp),d1
	move.l	_MathBase,a6
	jsr	_LVOSPCmp(a6)
	blt	_lab7
_lab6:
	move.l	-112(a4),-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-100(a4),a2
	move.l	_dataptr,a1
	jsr	_htol
	move.l	d0,0(a2,d7.L)
	move.l	_dataptr,a2
	jsr	_strlen
	addq	#1,d0
	move.l	_dataptr,d1
	add.l	d0,d1
	move.l	d1,_dataptr
	move.l	(sp),d0
	move.l	-112(a4),d1
	move.l	_MathBase,a6
	jsr	_LVOSPAdd(a6)
	move.l	d0,-112(a4)
	jmp	_lab4
_lab7:
	add.l	#8,sp
	move.w	#120,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-64(a4)
ANFANG:
	jsr	_cls
	pea	_stringconst1
	jsr	_Ustringprint
	addq	#4,sp
	move.l	#0,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
	pea	_stringconst2
	jsr	_Ustringprint
	addq	#4,sp
	lea	_tempstring0,a0
	jsr	_inputsingle
	move.l	d0,-116(a4)
	pea	_stringconst3
	jsr	_Ustringprint
	addq	#4,sp
	lea	_tempstring1,a0
	jsr	_inputsingle
	move.l	d0,-120(a4)
	pea	_stringconst4
	jsr	_Ustringprint
	addq	#4,sp
	lea	_tempstring2,a0
	jsr	_inputsingle
	move.l	d0,-124(a4)
	jsr	_cls
	move.l	#$a,-(sp)
	move.l	(sp)+,-128(a4)
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	-128(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-116(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.w	#255,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPDiv(a6)
	move.l	d0,-(sp)
	move.l	-128(a4),-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPSub(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-68(a4)
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	-128(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-124(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.w	#255,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPDiv(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-72(a4)
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	-128(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-120(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.w	#255,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPDiv(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-76(a4)
	jsr	_LINE390
	move.l	-64(a4),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPNeg(a6)
	move.l	d0,-(sp)
	move.l	-136(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-140(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-132(a4)
	move.l	-64(a4),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPNeg(a6)
	move.l	d0,-(sp)
	move.l	-136(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-148(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-144(a4)
	move.l	-64(a4),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPNeg(a6)
	move.l	d0,-(sp)
	move.l	-156(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-152(a4)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-112(a4)
	move.l	-108(a4),-(sp)
	move.l	#$80000041,-(sp)
_lab8:
	moveq	#0,d1
	move.l	(sp),d0
	move.l	_MathBase,a6
	jsr	_LVOSPCmp(a6)
	blt.s	_lab9
	move.l	-112(a4),d0
	move.l	4(sp),d1
	move.l	_MathBase,a6
	jsr	_LVOSPCmp(a6)
	bgt	_lab14
	jmp	_lab10
_lab9:
	move.l	-112(a4),d0
	move.l	4(sp),d1
	move.l	_MathBase,a6
	jsr	_LVOSPCmp(a6)
	blt	_lab14
_lab10:
	move.l	-112(a4),-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-100(a4),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	jsr	_absf
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	#1,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#4,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-96(a4),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,-4(a4)
	move.l	-112(a4),-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-100(a4),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	jsr	_absf
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	#2,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#4,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-96(a4),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,-8(a4)
	move.l	-112(a4),-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-100(a4),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,d0
	jsr	_absf
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	#3,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#4,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-96(a4),a0
	move.l	0(a0,d7.L),-(sp)
	move.l	(sp)+,-12(a4)
	jsr	_LINE520
	move.l	-112(a4),-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	moveq	#0,d7
	move.w	(sp)+,d1
	ext.l	d1
	move.l	d1,-(sp)
	move.l	#1,-(sp)
	jsr	lmulu
	add.l	#8,sp
	add.l	d0,d7
	lsl.l	#2,d7
	move.l	-100(a4),a0
	move.l	0(a0,d7.L),-(sp)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	move.l	_MathBase,a6
	jsr	_LVOSPCmp(a6)
	bgt.s	_lab11
	moveq	#0,d5
_lab11:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab12
	jmp	_lab13
_lab12:
	move.l	-84(a4),-(sp)
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.w	#75,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPAdd(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-88(a4),-(sp)
	move.w	#20,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPAdd(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOMove(a6)
	move.l	-80(a4),-(sp)
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.w	#75,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPAdd(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-92(a4),-(sp)
	move.w	#20,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPAdd(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_LVODraw(a6)
_lab13:
	move.l	-80(a4),-(sp)
	move.l	(sp)+,-84(a4)
	move.l	-92(a4),-(sp)
	move.l	(sp)+,-88(a4)
	move.l	(sp),d0
	move.l	-112(a4),d1
	move.l	_MathBase,a6
	jsr	_LVOSPAdd(a6)
	move.l	d0,-112(a4)
	jmp	_lab8
_lab14:
	add.l	#8,sp
	move.w	#1,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_locate
	pea	_stringconst5
	jsr	_Ustringprint
	addq	#4,sp
	move.l	#0,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
	pea	_stringconst6
	pea	_stringvar0
	move.l	(sp)+,-160(a4)
	move.l	(sp)+,a1
	move.l	-160(a4),a0
	jsr	_strcpy
_lab15:
	move.l	-160(a4),-(sp)
	pea	_stringconst7
	move.l	(sp)+,a1
	move.l	(sp)+,a0
	jsr	_strne
	move.l	d0,-(sp)
	move.l	-160(a4),-(sp)
	pea	_stringconst8
	move.l	(sp)+,a1
	move.l	(sp)+,a0
	jsr	_strne
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	and.l	d1,d0
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab16
	jmp	_lab17
_lab16:
	jsr	_inkey
	move.l	d0,-(sp)
	move.l	(sp)+,a1
	lea	_tempstring3,a0
	jsr	_ucase
	move.l	a0,-(sp)
	move.l	#_stringvar0,-160(a4)
	move.l	(sp)+,a1
	move.l	-160(a4),a0
	jsr	_strcpy
	jsr	_sleep
	jmp	_lab15
_lab17:
	move.l	-160(a4),-(sp)
	pea	_stringconst9
	move.l	(sp)+,a1
	move.l	(sp)+,a0
	jsr	_streq
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab18
	jmp	_lab19
_lab18:
	jmp	ENDE
_lab19:
	jmp	ANFANG
_LINE390:
	move.l	-76(a4),-(sp)
	move.l	(sp)+,d0
	move.l	_MathTransBase,a6
	jsr	_LVOSPCos(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-148(a4)
	move.l	-76(a4),-(sp)
	move.l	(sp)+,d0
	move.l	_MathTransBase,a6
	jsr	_LVOSPSin(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-140(a4)
	move.l	-68(a4),-(sp)
	move.l	(sp)+,d0
	move.l	_MathTransBase,a6
	jsr	_LVOSPCos(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-136(a4)
	move.l	-68(a4),-(sp)
	move.l	(sp)+,d0
	move.l	_MathTransBase,a6
	jsr	_LVOSPSin(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-156(a4)
	move.l	-72(a4),-(sp)
	move.l	(sp)+,d0
	move.l	_MathTransBase,a6
	jsr	_LVOSPCos(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-164(a4)
	move.l	-72(a4),-(sp)
	move.l	(sp)+,d0
	move.l	_MathTransBase,a6
	jsr	_LVOSPSin(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-168(a4)
	move.l	-164(a4),-(sp)
	move.l	-148(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-140(a4),-(sp)
	move.l	-156(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-168(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPSub(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-28(a4)
	move.l	-164(a4),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPNeg(a6)
	move.l	d0,-(sp)
	move.l	-140(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-156(a4),-(sp)
	move.l	-148(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-168(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPSub(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-32(a4)
	move.l	-136(a4),-(sp)
	move.l	-168(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-36(a4)
	move.l	-140(a4),-(sp)
	move.l	-136(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-40(a4)
	move.l	-136(a4),-(sp)
	move.l	-148(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-44(a4)
	move.l	-156(a4),-(sp)
	move.l	(sp)+,-48(a4)
	move.l	-148(a4),-(sp)
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPNeg(a6)
	move.l	d0,-(sp)
	move.l	-168(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-140(a4),-(sp)
	move.l	-156(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-164(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPSub(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-52(a4)
	move.l	-140(a4),-(sp)
	move.l	-168(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-156(a4),-(sp)
	move.l	-148(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-164(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPSub(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-56(a4)
	move.l	-136(a4),-(sp)
	move.l	-164(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-60(a4)
	rts	  
_LINE520:
	move.l	-4(a4),-(sp)
	move.l	-132(a4),-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPSub(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-4(a4)
	move.l	-8(a4),-(sp)
	move.l	-144(a4),-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPSub(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-8(a4)
	move.l	-12(a4),-(sp)
	move.l	-152(a4),-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPSub(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-12(a4)
	move.l	-28(a4),-(sp)
	move.l	-4(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-32(a4),-(sp)
	move.l	-8(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPAdd(a6)
	move.l	d0,-(sp)
	move.l	-36(a4),-(sp)
	move.l	-12(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPAdd(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-16(a4)
	move.l	-40(a4),-(sp)
	move.l	-4(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-44(a4),-(sp)
	move.l	-8(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPAdd(a6)
	move.l	d0,-(sp)
	move.l	-48(a4),-(sp)
	move.l	-12(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPAdd(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-20(a4)
	move.l	-52(a4),-(sp)
	move.l	-4(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-56(a4),-(sp)
	move.l	-8(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPAdd(a6)
	move.l	d0,-(sp)
	move.l	-60(a4),-(sp)
	move.l	-12(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPAdd(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-24(a4)
	move.w	#135,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	#$f,-(sp)
	move.l	-64(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-16(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-20(a4),-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPDiv(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPAdd(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-80(a4)
	move.w	#80,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	#$d,-(sp)
	move.l	-64(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-24(a4),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-20(a4),-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPDiv(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPSub(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-92(a4)
	rts	  
ENDE:
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	_CloseWdw
	addq	#4,sp
	jmp	_EXIT_PROG

_EXIT_PROG:
	unlk	a4
_ABORT_PROG:
	jsr	_free_alloc
	jsr	_closegfx
	jsr	_closeintuition
	jsr	_closemathtrans
	jsr	_closemathffp
	movem.l	(sp)+,d1-d7/a0-a6
	move.l	_initialSP,sp
	jsr	_cleanup

	rts

	SECTION data,DATA

_stringconst0:	dc.b "Shuttle",0
_stringconst1:	dc.b "Enter three angles:",0
_stringconst2:	dc.b "x: ",0
_stringconst3:	dc.b "y: ",0
_stringconst4:	dc.b "z: ",0
_stringconst5:	dc.b "Hit 'C' to continue or 'Q' to quit.",0
_stringconst6:	dc.b "",0
_stringconst7:	dc.b "C",0
_stringconst8:	dc.b "Q",0
_stringconst9:	dc.b "Q",0

_BASICdata:
	dc.b "d",0
	dc.b "d",0
	dc.b "fffffffffffffff9",0
	dc.b "7",0
	dc.b "3",0
	dc.b "fffffffffffffffd",0
	dc.b "3",0
	dc.b "7",0
	dc.b "fffffffffffffffb",0
	dc.b "5",0
	dc.b "2",0
	dc.b "fffffffffffffff8",0
	dc.b "8",0
	dc.b "8",0
	dc.b "fffffffffffffff9",0
	dc.b "7",0
	dc.b "fffffffffffffffe",0
	dc.b "fffffffffffffff8",0
	dc.b "8",0
	dc.b "fffffffffffffff9",0
	dc.b "fffffffffffffffb",0
	dc.b "5",0
	dc.b "fffffffffffffffd",0
	dc.b "fffffffffffffffd",0
	dc.b "3",0
	dc.b "3",0
	dc.b "ffffffffffffffff",0
	dc.b "1",0
	dc.b "3",0
	dc.b "fffffffffffffffd",0
	dc.b "3",0
	dc.b "3",0
	dc.b "fffffffffffffffa",0
	dc.b "6",0
	dc.b "6",0
	dc.b "fffffffffffffff4",0
	dc.b "c",0
	dc.b "c",0
	dc.b "fffffffffffffff4",0
	dc.b "c",0
	dc.b "fffffffffffffff4",0
	dc.b "fffffffffffffff4",0
	dc.b "c",0
	dc.b "fffffffffffffff4",0
	dc.b "fffffffffffffffa",0
	dc.b "6",0
	dc.b "fffffffffffffffd",0
	dc.b "fffffffffffffffd",0
	dc.b "3",0
	dc.b "3",0
	dc.b "2",0
	dc.b "2",0
	dc.b "5",0
	dc.b "5",0
	dc.b "5",0
	dc.b "6",0
	dc.b "fffffffffffffffa",0
	dc.b "6",0
	dc.b "6",0
	dc.b "fffffffffffffff3",0
	dc.b "d",0
	dc.b "d",0
	dc.b "fffffffffffffff3",0
	dc.b "d",0
	dc.b "fffffffffffffff3",0
	dc.b "fffffffffffffff3",0
	dc.b "d",0
	dc.b "fffffffffffffffa",0
	dc.b "fffffffffffffffa",0
	dc.b "6",0
	dc.b "fffffffffffffffb",0
	dc.b "5",0
	dc.b "5",0
	dc.b "5",0
	dc.b "5",0
	dc.b "22",0
	dc.b "6",0
	dc.b "6",0
	dc.b "22",0
	dc.b "6",0
	dc.b "fffffffffffffffb",0
	dc.b "22",0
	dc.b "22",0
	dc.b "ffffffffffffffde",0
	dc.b "22",0
	dc.b "22",0
	dc.b "fffffffffffffff5",0
	dc.b "22",0
	dc.b "ffffffffffffffde",0
	dc.b "ffffffffffffffde",0
	dc.b "22",0
	dc.b "fffffffffffffffa",0
	dc.b "fffffffffffffffb",0
	dc.b "22",0
	dc.b "fffffffffffffffa",0
	dc.b "6",0
	dc.b "22",0
	dc.b "22",0
	dc.b "22",0
	dc.b "1d",0
	dc.b "5",0
	dc.b "5",0
	dc.b "1d",0
	dc.b "8",0
	dc.b "8",0
	dc.b "1d",0
	dc.b "1d",0
	dc.b "ffffffffffffffe3",0
	dc.b "1d",0
	dc.b "1d",0
	dc.b "fffffffffffffff6",0
	dc.b "1d",0
	dc.b "ffffffffffffffe3",0
	dc.b "ffffffffffffffe3",0
	dc.b "1d",0
	dc.b "fffffffffffffff8",0
	dc.b "8",0
	dc.b "1d",0
	dc.b "fffffffffffffffb",0
	dc.b "5",0
	dc.b "1d",0
	dc.b "1d",0
	dc.b "1d",0
	dc.b "17",0
	dc.b "4",0
	dc.b "9",0
	dc.b "17",0
	dc.b "17",0
	dc.b "17",0
	dc.b "17",0
	dc.b "17",0
	dc.b "ffffffffffffffe9",0
	dc.b "17",0
	dc.b "17",0
	dc.b "fffffffffffffff6",0
	dc.b "17",0
	dc.b "ffffffffffffffe9",0
	dc.b "ffffffffffffffe9",0
	dc.b "17",0
	dc.b "ffffffffffffffe9",0
	dc.b "17",0
	dc.b "17",0
	dc.b "fffffffffffffffc",0
	dc.b "9",0
	dc.b "17",0
	dc.b "17",0
	dc.b "17",0
	dc.b "17",0
	dc.b "5",0
	dc.b "5",0
	dc.b "5",0
	dc.b "5",0
	dc.b "5",0
	dc.b "5",0
	dc.b "5",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffffb",0
	dc.b "5",0
	dc.b "5",0
	dc.b "5",0
	dc.b "5",0
	dc.b "5",0
	dc.b "5",0
	dc.b "5",0
	dc.b "5",0
	dc.b "5",0
	dc.b "5",0
	dc.b "5",0
	dc.b "5",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffffb",0
	dc.b "5",0
	dc.b "5",0
	dc.b "5",0
	dc.b "5",0
	dc.b "fffffffffffffffb",0
	dc.b "5",0
	dc.b "5",0
	dc.b "fffffffffffffffb",0
	dc.b "5",0
	dc.b "5",0
	dc.b "fffffffffffffffb",0
	dc.b "5",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffffb",0
	dc.b "5",0
	dc.b "fffffffffffffffb",0
	dc.b "5",0
	dc.b "5",0
	dc.b "ffffffffffffffe2",0
	dc.b "5",0
	dc.b "5",0
	dc.b "ffffffffffffffe2",0
	dc.b "1e",0
	dc.b "1e",0
	dc.b "ffffffffffffffe2",0
	dc.b "1e",0
	dc.b "fffffffffffffff7",0
	dc.b "ffffffffffffffe2",0
	dc.b "1e",0
	dc.b "ffffffffffffffe2",0
	dc.b "ffffffffffffffe2",0
	dc.b "ffffffffffffffe2",0
	dc.b "fffffffffffffff7",0
	dc.b "ffffffffffffffe2",0
	dc.b "ffffffffffffffe2",0
	dc.b "1e",0
	dc.b "ffffffffffffffe2",0
	dc.b "fffffffffffffffb",0
	dc.b "5",0
	dc.b "ffffffffffffffe2",0
	dc.b "1e",0
	dc.b "1e",0
	dc.b "ffffffffffffffdc",0
	dc.b "5",0
	dc.b "5",0
	dc.b "ffffffffffffffdc",0
	dc.b "24",0
	dc.b "24",0
	dc.b "ffffffffffffffdc",0
	dc.b "24",0
	dc.b "fffffffffffffff7",0
	dc.b "ffffffffffffffdc",0
	dc.b "24",0
	dc.b "ffffffffffffffdc",0
	dc.b "ffffffffffffffdc",0
	dc.b "ffffffffffffffdc",0
	dc.b "fffffffffffffff7",0
	dc.b "ffffffffffffffdc",0
	dc.b "ffffffffffffffdc",0
	dc.b "24",0
	dc.b "ffffffffffffffdc",0
	dc.b "fffffffffffffffb",0
	dc.b "5",0
	dc.b "ffffffffffffffdc",0
	dc.b "24",0
	dc.b "24",0
	dc.b "ffffffffffffffdc",0
	dc.b "24",0
	dc.b "a",0
	dc.b "fffffffffffffff6",0
	dc.b "9",0
	dc.b "3",0
	dc.b "fffffffffffffffd",0
	dc.b "3",0
	dc.b "fffffffffffffffd",0
	dc.b "fffffffffffffffd",0
	dc.b "3",0
	dc.b "fffffffffffffff5",0
	dc.b "fffffffffffffff5",0
	dc.b "fffffffffffffff5",0
	dc.b "fffffffffffffff5",0
	dc.b "fffffffffffffff5",0
	dc.b "fffffffffffffff7",0
	dc.b "3",0
	dc.b "fffffffffffffffd",0
	dc.b "fffffffffffffffd",0
	dc.b "a",0
	dc.b "fffffffffffffff6",0
	dc.b "a",0
	dc.b "b",0
	dc.b "fffffffffffffff5",0
	dc.b "b",0
	dc.b "c",0
	dc.b "fffffffffffffff4",0
	dc.b "e",0
	dc.b "3",0
	dc.b "fffffffffffffffd",0
	dc.b "3",0
	dc.b "fffffffffffffffd",0
	dc.b "fffffffffffffffd",0
	dc.b "3",0
	dc.b "fffffffffffffff1",0
	dc.b "fffffffffffffff1",0
	dc.b "fffffffffffffff1",0
	dc.b "fffffffffffffff1",0
	dc.b "fffffffffffffff1",0
	dc.b "fffffffffffffff2",0
	dc.b "3",0
	dc.b "fffffffffffffffd",0
	dc.b "fffffffffffffffd",0
	dc.b "c",0
	dc.b "fffffffffffffff4",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0
	dc.b "fffffffffffffff7",0
	dc.b "9",0

	SECTION mem,BSS

_array0:	ds.l 1204
_array1:	ds.l 301
_fg	ds.w 1
_bg	ds.w 1
_tmpelement	ds.l 1
_tempstring0:	ds.b 1024
_tempstring1:	ds.b 1024
_tempstring2:	ds.b 1024
_xmin	ds.w 1
_ymin	ds.w 1
_stringvar0:	ds.b 1024
_tempstring3:	ds.b 1024
_dataptr:	ds.l 1
_initialSP:	ds.l 1

	END
