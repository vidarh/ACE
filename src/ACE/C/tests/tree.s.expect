
	xref _AbsExecBase
	xref _LVOPermit
	xref _MathBase
	xref _LVOSPFlt
	xref _LVOSPCmp
	xref _turnright
	xref _forward
	xref _MathTransBase
	xref _LVOSPMul
	xref _LVOForbid
	xref _SUB_TREE
	xref _back
	xref _turnleft
	xref _Ustringprint
	xref _Ucodeprint
	xref _argcount
	xref _arg
	xref _strcpy
	xref _streq
	xref _SUB_USAGE
	xref _inputsingle
	xref _val
	xref _openscreen
	xref _OpenWdw
	xref _change_text_font
	xref _RPort
	xref _GfxBase
	xref _LVOSetAPen
	xref _fgdpen
	xref _LVOSetBPen
	xref _bgpen
	xref _changetextcolor
	xref _cls
	xref _locate
	xref _round
	xref _Usingleprint
	xref _penup
	xref _setxy
	xref _pendown
	xref _inkey
	xref _ucase
	xref _strne
	xref _CloseWdw
	xref _closescreen
	xref _startup
	xref _cleanup
	xref _parse_cli_args
	xref _openmathffp
	xref _closemathffp
	xref _openmathtrans
	xref _closemathtrans
	xref _IntuitionBase
	xref _DosBase
	xref _opengfx
	xref _closegfx
	xref _openintuition
	xref _closeintuition
	xref _starterr
	xdef _EXIT_PROG
	xref _free_alloc

	SECTION code,CODE

	jsr	_startup
	cmpi.b	#1,_starterr
	bne.s	_START_PROG
	rts
_START_PROG:
	move.l	sp,_initialSP
	movem.l	d1-d7/a0-a6,-(sp)
	jsr	_parse_cli_args
	jsr	_openmathffp
	cmpi.b	#1,_starterr
	bne.s	_mathffp_ok
	jmp	_ABORT_PROG
_mathffp_ok:
	jsr	_openmathtrans
	cmpi.b	#1,_starterr
	bne.s	_mathtrans_ok
	jmp	_ABORT_PROG
_mathtrans_ok:
	jsr	_openintuition
	cmpi.b	#1,_starterr
	bne.s	_intuition_ok
	jmp	_ABORT_PROG
_intuition_ok:
	jsr	_opengfx
	cmpi.b	#1,_starterr
	bne.s	_gfx_ok
	jmp	_ABORT_PROG
_gfx_ok:
	link	a4,#-24

	jmp	_lab0
_SUB_TREE:
	link	a5,#-12
	move.l	_AbsExecBase,a6
	jsr	_LVOPermit(a6)
	move.l	-4(a5),-(sp)
	move.w	#5,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	move.l	_MathBase,a6
	jsr	_LVOSPCmp(a6)
	blt.s	_lab1
	moveq	#0,d5
_lab1:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab2
	jmp	_lab3
_lab2:
	jmp	_EXIT_SUB_TREE
_lab3:
	move.w	#30,-(sp)
	move.w	(sp)+,d0
	jsr	_turnright
	move.l	-4(a5),-(sp)
	move.l	(sp)+,d0
	jsr	_forward
	move.l	-4(a5),-(sp)
	move.l	#$1,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-8(a5)
	move.l	_AbsExecBase,a6
	jsr	_LVOForbid(a6)
	move.l	-8(a5),-12(sp)
	jsr	_SUB_TREE
	move.l	-4(a5),-(sp)
	move.l	(sp)+,d0
	jsr	_back
	move.w	#60,-(sp)
	move.w	(sp)+,d0
	jsr	_turnleft
	move.l	-4(a5),-(sp)
	move.l	(sp)+,d0
	jsr	_forward
	move.l	-4(a5),-(sp)
	move.l	#$1,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-12(a5)
	move.l	_AbsExecBase,a6
	jsr	_LVOForbid(a6)
	move.l	-12(a5),-12(sp)
	jsr	_SUB_TREE
	move.l	-4(a5),-(sp)
	move.l	(sp)+,d0
	jsr	_back
	move.w	#30,-(sp)
	move.w	(sp)+,d0
	jsr	_turnright
_EXIT_SUB_TREE:
	unlk	a5
	rts	  
_lab0:
	jmp	_lab4
_SUB_USAGE:
	link	a5,#0
	pea	_stringconst0
	jsr	_Ustringprint
	addq	#4,sp
	move.l	#0,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
_EXIT_SUB_USAGE:
	unlk	a5
	rts	  
_lab4:
	jsr	_argcount
	move.l	d0,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	bne.s	_lab5
	moveq	#0,d5
_lab5:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab6
	jmp	_lab7
_lab6:
	move.w	#1,-(sp)
	neg.w	(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-12(a4)
	jmp	_lab11
_lab7:
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-12(a4)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	pea	_tempstring0
	jsr	_arg
	add.l	#8,sp
	move.l	d0,-(sp)
	pea	_stringvar0
	move.l	(sp)+,-16(a4)
	move.l	(sp)+,a1
	move.l	-16(a4),a0
	jsr	_strcpy
	move.l	-16(a4),-(sp)
	pea	_stringconst1
	move.l	(sp)+,a1
	move.l	(sp)+,a0
	jsr	_streq
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab8
	jmp	_lab9
_lab8:
	jsr	_SUB_USAGE
	pea	_stringconst2
	jsr	_Ustringprint
	addq	#4,sp
	lea	_tempstring1,a0
	jsr	_inputsingle
	move.l	d0,-20(a4)
	jmp	_lab10
_lab9:
	move.l	-16(a4),-(sp)
	jsr	_val
	addq	#4,sp
	move.l	d0,-(sp)
	move.l	(sp)+,-20(a4)
_lab10:
_lab11:
	move.w	#1,-(sp)
	move.w	#640,-(sp)
	move.w	#200,-(sp)
	move.w	#2,-(sp)
	move.w	#2,-(sp)
	move.w	(sp)+,d4
	move.w	(sp)+,d3
	move.w	(sp)+,d2
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_openscreen
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	#0,-(sp)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#10,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#640,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#200,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#32,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	_OpenWdw
	add.l	#32,sp
	pea	_stringconst3
	move.w	#8,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	_change_text_font
	add.l	#8,sp
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	move.w	d0,_fg
	move.w	d0,_fgdpen
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOSetAPen(a6)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	move.w	d0,_bg
	move.w	d0,_bgpen
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOSetBPen(a6)
	move.w	_fg,d0
	move.w	_bg,d0
	jsr	_changetextcolor
	jsr	_cls
	move.w	#3,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_locate
	move.l	-12(a4),-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab12
	jmp	_lab13
_lab12:
	pea	_stringconst4
	jsr	_Ustringprint
	addq	#4,sp
	lea	_tempstring2,a0
	jsr	_inputsingle
	move.l	d0,-20(a4)
	jsr	_cls
	move.w	#3,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_locate
_lab13:
	pea	_stringconst5
	jsr	_Ustringprint
	addq	#4,sp
	move.l	#0,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
	move.l	-20(a4),-(sp)
	jsr	_Usingleprint
	addq	#4,sp
	move.l	#2,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
	move.l	#0,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
	jsr	_penup
	move.w	#320,-(sp)
	move.w	#150,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_setxy
	jsr	_pendown
	move.l	-20(a4),-(sp)
	move.l	(sp)+,-24(a4)
	move.l	_AbsExecBase,a6
	jsr	_LVOForbid(a6)
	move.l	-24(a4),-12(sp)
	jsr	_SUB_TREE
	move.w	#23,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_locate
	pea	_stringconst6
	jsr	_Ustringprint
	addq	#4,sp
_lab14:
	jsr	_inkey
	move.l	d0,-(sp)
	move.l	(sp)+,a1
	lea	_tempstring3,a0
	jsr	_ucase
	move.l	a0,-(sp)
	pea	_stringconst7
	move.l	(sp)+,a1
	move.l	(sp)+,a0
	jsr	_strne
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab15
	jmp	_lab16
_lab15:
	jmp	_lab14
_lab16:
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	_CloseWdw
	addq	#4,sp
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	jsr	_closescreen

_EXIT_PROG:
	unlk	a4
_ABORT_PROG:
	jsr	_free_alloc
	jsr	_closegfx
	jsr	_closeintuition
	jsr	_closemathtrans
	jsr	_closemathffp
	movem.l	(sp)+,d1-d7/a0-a6
	move.l	_initialSP,sp
	jsr	_cleanup

	rts

	SECTION data,DATA

_stringconst0:	dc.b "usage: tree <depth>",0
_stringconst1:	dc.b "?",0
_stringconst2:	dc.b "enter depth: ",0
_stringconst3:	dc.b "topaz",0
_stringconst4:	dc.b "enter depth: ",0
_stringconst5:	dc.b "depth of tree is",0
_stringconst6:	dc.b "press 'q' to quit...",0
_stringconst7:	dc.b "Q",0

	SECTION mem,BSS

_tempstring0:	ds.b 1024
_stringvar0:	ds.b 1024
_tempstring1:	ds.b 1024
_fg	ds.w 1
_bg	ds.w 1
_tempstring2:	ds.b 1024
_tempstring3:	ds.b 1024
_initialSP:	ds.l 1

	END
