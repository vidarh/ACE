
	xref _AbsExecBase
	xref _LVOPermit
	xref _MathBase
	xref _LVOSPMul
	xref _LVOSPFlt
	xref _LVOSPSub
	xref _LVOSPDiv
	xref _LVOSPAdd
	xref _rnd
	xref _LVOSPFloor
	xref _LVOSPFix
	xref _RPort
	xref _GfxBase
	xref _LVOSetAPen
	xref _fgdpen
	xref _bgpen
	xref _changetextcolor
	xref _round
	xref _LVODraw
	xref _SUB_CALC
	xref _penup
	xref _LVOForbid
	xref _SUB_UNIVERSAL_X@
	xref _SUB_UNIVERSAL_Y@
	xref _setxy
	xref _SUB_DRAW_UNIVERSAL_LINE
	xref _menu_test
	xref _lab6
	xref _lab7
	xref _openscreen
	xref _lab8
	xref _OpenWdw
	xref _lab9
	xref _palette
	xref _ModifyMenu
	xref _lab10
	xref _SUB_LORENZATTRACTOR
	xref _MenuFunc
	xref _lab11
	xref _lab12
	xref _lab13
	xref _sysrequest
	xref _lab14
	xref _CloseWdw
	xref _closescreen
	xref _startup
	xref _cleanup
	xref _openmathffp
	xref _closemathffp
	xref _IntuitionBase
	xref _DosBase
	xref _opengfx
	xref _closegfx
	xref _openintuition
	xref _closeintuition
	xref _starterr
	xdef _EXIT_PROG
	xref _free_alloc

	SECTION code,CODE

	jsr	_startup
	cmpi.b	#1,_starterr
	bne.s	_START_PROG
	rts
_START_PROG:
	move.l	sp,_initialSP
	movem.l	d1-d7/a0-a6,-(sp)
	jsr	_openmathffp
	cmpi.b	#1,_starterr
	bne.s	_mathffp_ok
	jmp	_ABORT_PROG
_mathffp_ok:
	jsr	_openintuition
	cmpi.b	#1,_starterr
	bne.s	_intuition_ok
	jmp	_ABORT_PROG
_intuition_ok:
	jsr	_opengfx
	cmpi.b	#1,_starterr
	bne.s	_gfx_ok
	jmp	_ABORT_PROG
_gfx_ok:
	link	a4,#-56

	move.l	#0,-4(a4)
	move.l	#0,-8(a4)
	move.l	#0,-12(a4)
	move.l	#0,-16(a4)
	move.l	#0,-20(a4)
	move.l	#0,-24(a4)
	move.l	#0,-28(a4)
	move.l	#0,-32(a4)
	move.l	#0,-36(a4)
	jmp	_lab0
_SUB_DRAW_UNIVERSAL_LINE:
	link	a5,#-40
	move.l	_AbsExecBase,a6
	jsr	_LVOPermit(a6)
	move.l	a4,d0
	sub.l	#16,d0
	move.l	d0,-12(a5)
	move.l	a4,d0
	sub.l	#20,d0
	move.l	d0,-16(a5)
	move.l	a4,d0
	sub.l	#24,d0
	move.l	d0,-20(a5)
	move.l	a4,d0
	sub.l	#28,d0
	move.l	d0,-24(a5)
	move.l	a4,d0
	sub.l	#32,d0
	move.l	d0,-28(a5)
	move.l	a4,d0
	sub.l	#36,d0
	move.l	d0,-32(a5)
	move.l	-4(a5),-(sp)
	move.l	-12(a5),a0
	move.l	(a0),-(sp)
	move.w	(sp)+,d0
	move.w	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-20(a5),a0
	move.l	(a0),-(sp)
	move.l	(sp)+,d0
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	jsr	_LVOSPSub(a6)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.w	#640,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	(sp)+,d0
	move.w	(sp)+,d1
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-24(a5),a0
	move.l	(a0),-(sp)
	move.l	-20(a5),a0
	move.l	(a0),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	sub.l	d1,d0
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	jsr	_LVOSPDiv(a6)
	move.l	d0,-(sp)
	move.w	#640,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	jsr	_LVOSPDiv(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	jsr	_LVOSPAdd(a6)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	(sp)+,-36(a5)
	move.l	-8(a5),-(sp)
	move.l	-16(a5),a0
	move.l	(a0),-(sp)
	move.w	(sp)+,d0
	move.w	(sp)+,d1
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-32(a5),a0
	move.l	(a0),-(sp)
	move.l	(sp)+,d0
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	jsr	_LVOSPSub(a6)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.w	#400,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	(sp)+,d0
	move.w	(sp)+,d1
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-28(a5),a0
	move.l	(a0),-(sp)
	move.l	-32(a5),a0
	move.l	(a0),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	sub.l	d1,d0
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	jsr	_LVOSPDiv(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-40(a5)
	jsr	_rnd
	move.l	d0,-(sp)
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	(sp)+,d0
	move.w	(sp)+,d1
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_LVOSPFloor(a6)
	jsr	_LVOSPFix(a6)
	move.l	d0,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	add.l	d1,d0
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.w	d0,_fg
	move.w	d0,_fgdpen
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVOSetAPen(a6)
	move.w	_bgpen,_bg
	move.w	_fg,d0
	move.w	_bg,d1
	jsr	_changetextcolor
	move.l	-36(a5),-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-40(a5),-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	move.w	d0,_xmin
	move.w	d1,_ymin
	move.l	_RPort,a1
	move.l	_GfxBase,a6
	jsr	_LVODraw(a6)
_EXIT_SUB_DRAW_UNIVERSAL_LINE:
	unlk	a5
	rts	  
_lab0:
	jmp	_lab1
_SUB_UNIVERSAL_X@:
	link	a5,#-16
	move.l	_AbsExecBase,a6
	jsr	_LVOPermit(a6)
	move.l	a4,d0
	sub.l	#16,d0
	move.l	d0,-8(a5)
	move.l	a4,d0
	sub.l	#24,d0
	move.l	d0,-12(a5)
	move.l	a4,d0
	sub.l	#28,d0
	move.l	d0,-16(a5)
	move.l	-4(a5),-(sp)
	move.l	-8(a5),a0
	move.l	(a0),-(sp)
	move.w	(sp)+,d0
	move.w	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-12(a5),a0
	move.l	(a0),-(sp)
	move.l	(sp)+,d0
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	jsr	_LVOSPSub(a6)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.w	#640,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	(sp)+,d0
	move.w	(sp)+,d1
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-16(a5),a0
	move.l	(a0),-(sp)
	move.l	-12(a5),a0
	move.l	(a0),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	sub.l	d1,d0
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	jsr	_LVOSPDiv(a6)
	move.l	d0,-(sp)
	move.w	#640,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	jsr	_LVOSPDiv(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	jsr	_LVOSPAdd(a6)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,-44(a4)
_EXIT_SUB_UNIVERSAL_X@:
	unlk	a5
	rts	  
_lab1:
	jmp	_lab2
_SUB_UNIVERSAL_Y@:
	link	a5,#-16
	move.l	_AbsExecBase,a6
	jsr	_LVOPermit(a6)
	move.l	a4,d0
	sub.l	#20,d0
	move.l	d0,-8(a5)
	move.l	a4,d0
	sub.l	#32,d0
	move.l	d0,-12(a5)
	move.l	a4,d0
	sub.l	#36,d0
	move.l	d0,-16(a5)
	move.l	-4(a5),-(sp)
	move.l	-8(a5),a0
	move.l	(a0),-(sp)
	move.w	(sp)+,d0
	move.w	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-16(a5),a0
	move.l	(a0),-(sp)
	move.l	(sp)+,d0
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	jsr	_LVOSPSub(a6)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.w	#400,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	(sp)+,d0
	move.w	(sp)+,d1
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-12(a5),a0
	move.l	(a0),-(sp)
	move.l	-16(a5),a0
	move.l	(a0),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	sub.l	d1,d0
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	jsr	_LVOSPDiv(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,-48(a4)
_EXIT_SUB_UNIVERSAL_Y@:
	unlk	a5
	rts	  
_lab2:
	jmp	_lab3
_SUB_CALC:
	link	a5,#-24
	move.l	a4,d0
	sub.l	#4,d0
	move.l	d0,-4(a5)
	move.l	a4,d0
	sub.l	#8,d0
	move.l	d0,-8(a5)
	move.l	a4,d0
	sub.l	#12,d0
	move.l	d0,-12(a5)
	move.l	#0,-(sp)
	move.l	-8(a5),a0
	move.l	(a0),-(sp)
	move.l	-4(a5),a0
	move.l	(a0),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	_MathBase,a6
	jsr	_LVOSPSub(a6)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.w	(sp)+,d0
	move.w	(sp)+,d1
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,-16(a5)
	move.l	-4(a5),a0
	move.l	(a0),-(sp)
	move.l	#0,-(sp)
	move.l	-12(a5),a0
	move.l	(a0),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	jsr	_LVOSPSub(a6)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.w	(sp)+,d0
	move.w	(sp)+,d1
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	-8(a5),a0
	move.l	(a0),-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	jsr	_LVOSPSub(a6)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	(sp)+,-20(a5)
	move.l	-4(a5),a0
	move.l	(a0),-(sp)
	move.l	-8(a5),a0
	move.l	(a0),-(sp)
	move.w	(sp)+,d0
	move.w	(sp)+,d1
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	#0,-(sp)
	move.l	#0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	jsr	_LVOSPDiv(a6)
	move.l	d0,-(sp)
	move.l	-12(a5),a0
	move.l	(a0),-(sp)
	move.w	(sp)+,d0
	move.w	(sp)+,d1
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	jsr	_LVOSPSub(a6)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	(sp)+,-24(a5)
	move.l	-4(a5),a0
	move.l	(a0),-(sp)
	move.l	#$64,-(sp)
	move.l	-16(a5),-(sp)
	move.w	(sp)+,d0
	move.w	(sp)+,d1
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	jsr	_LVOSPAdd(a6)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	-4(a5),a0
	move.l	(sp)+,(a0)
	move.l	-8(a5),a0
	move.l	(a0),-(sp)
	move.l	#$64,-(sp)
	move.l	-20(a5),-(sp)
	move.w	(sp)+,d0
	move.w	(sp)+,d1
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	jsr	_LVOSPAdd(a6)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	-8(a5),a0
	move.l	(sp)+,(a0)
	move.l	-12(a5),a0
	move.l	(a0),-(sp)
	move.l	#$64,-(sp)
	move.l	-24(a5),-(sp)
	move.w	(sp)+,d0
	move.w	(sp)+,d1
	jsr	_LVOSPMul(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	jsr	_LVOSPAdd(a6)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	move.l	-12(a5),a0
	move.l	(sp)+,(a0)
_EXIT_SUB_CALC:
	unlk	a5
	rts	  
_lab3:
	jmp	_lab4
_SUB_LORENZATTRACTOR:
	link	a5,#-28
	move.l	a4,d0
	sub.l	#4,d0
	move.l	d0,-4(a5)
	move.l	a4,d0
	sub.l	#8,d0
	move.l	d0,-8(a5)
	move.l	a4,d0
	sub.l	#12,d0
	move.l	d0,-12(a5)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	-4(a5),a0
	move.l	(sp)+,(a0)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	-8(a5),a0
	move.l	(sp)+,(a0)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	-12(a5),a0
	move.l	(sp)+,(a0)
	jsr	_SUB_CALC
	jsr	_penup
	move.l	-4(a5),a0
	move.l	(a0),-(sp)
	move.l	(sp)+,-16(a5)
	move.l	_AbsExecBase,a6
	jsr	_LVOForbid(a6)
	move.l	-16(a5),-12(sp)
	jsr	_SUB_UNIVERSAL_X@
	move.l	-44(a4),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.l	-12(a5),a0
	move.l	(a0),-(sp)
	move.l	(sp)+,-20(a5)
	move.l	_AbsExecBase,a6
	jsr	_LVOForbid(a6)
	move.l	-20(a5),-12(sp)
	jsr	_SUB_UNIVERSAL_Y@
	move.l	-48(a4),-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_setxy
_lab5:
	jsr	_SUB_CALC
	move.l	-4(a5),a0
	move.l	(a0),-(sp)
	move.l	(sp)+,-24(a5)
	move.l	-12(a5),a0
	move.l	(a0),-(sp)
	move.l	(sp)+,-28(a5)
	move.l	_AbsExecBase,a6
	jsr	_LVOForbid(a6)
	move.l	-24(a5),-12(sp)
	move.l	-28(a5),-16(sp)
	jsr	_SUB_DRAW_UNIVERSAL_LINE
	jsr	_menu_test
	cmpi.l	#0,d0
	beq.s	_lab6
	jsr	HANDLE_MENU
_lab6:
	move.l	#0,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab7
	jmp	_lab5
_lab7:
_EXIT_SUB_LORENZATTRACTOR:
	unlk	a5
	rts	  
_lab4:
	move.w	#1,-(sp)
	move.w	#640,-(sp)
	move.w	#400,-(sp)
	move.w	#2,-(sp)
	move.w	#4,-(sp)
	move.w	(sp)+,d4
	move.w	(sp)+,d3
	move.w	(sp)+,d2
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_openscreen
	jsr	_menu_test
	cmpi.l	#0,d0
	beq.s	_lab8
	jsr	HANDLE_MENU
_lab8:
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	pea	_stringconst0
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#640,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#400,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	_OpenWdw
	add.l	#32,sp
	jsr	_menu_test
	cmpi.l	#0,d0
	beq.s	_lab9
	jsr	HANDLE_MENU
_lab9:
	move.w	#0,-(sp)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d3
	move.l	(sp)+,d2
	move.l	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_palette
	move.w	#1,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d3
	move.l	(sp)+,d2
	move.l	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_palette
	move.w	#2,-(sp)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d3
	move.l	(sp)+,d2
	move.l	(sp)+,d1
	move.w	(sp)+,d0
	jsr	_palette
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	pea	_stringconst1
	move.l	#0,-(sp)
	jsr	_ModifyMenu
	add.l	#20,sp
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	pea	_stringconst2
	pea	_stringconst3
	jsr	_ModifyMenu
	add.l	#20,sp
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,-24(a4)
	move.w	#640,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,-28(a4)
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,-32(a4)
	move.w	#400,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,-36(a4)
	move.l	#0,-(sp)
	move.l	(sp)+,-16(a4)
	move.l	#0,-(sp)
	move.l	(sp)+,-20(a4)
	jsr	_menu_test
	cmpi.l	#0,d0
	beq.s	_lab10
	jsr	HANDLE_MENU
_lab10:
	jsr	_SUB_LORENZATTRACTOR
	jmp	_EXIT_PROG
HANDLE_MENU:
	move.w	#0,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	_MenuFunc
	addq	#4,sp
	move.l	d0,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	beq.s	_lab11
	moveq	#0,d5
_lab11:
	move.l	d5,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	_MenuFunc
	addq	#4,sp
	move.l	d0,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	moveq	#-1,d5
	cmp.l	d1,d0
	beq.s	_lab12
	moveq	#0,d5
_lab12:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	move.l	(sp)+,d1
	and.l	d1,d0
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab13
	jmp	_lab16
_lab13:
	pea	_stringconst4
	pea	_stringconst5
	pea	_stringconst6
	jsr	_sysrequest
	add.l	#12,sp
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab14
	jmp	_lab15
_lab14:
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	_CloseWdw
	addq	#4,sp
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	jsr	_closescreen
	jmp	_EXIT_PROG
_lab15:
_lab16:
	rts	  

_EXIT_PROG:
	unlk	a4
_ABORT_PROG:
	jsr	_free_alloc
	jsr	_closegfx
	jsr	_closeintuition
	jsr	_closemathffp
	movem.l	(sp)+,d1-d7/a0-a6
	move.l	_initialSP,sp
	jsr	_cleanup

	rts

	SECTION data,DATA

_stringconst0:	dc.b "Lorenz Attractor",0
_stringconst1:	dc.b "Project",0
_stringconst2:	dc.b "Quit",0
_stringconst3:	dc.b "Q",0
_stringconst4:	dc.b "Really quit?",0
_stringconst5:	dc.b "Yes",0
_stringconst6:	dc.b "No",0

	SECTION mem,BSS

_fg	ds.w 1
_bg	ds.w 1
_xmin	ds.w 1
_ymin	ds.w 1
_initialSP:	ds.l 1

	END
