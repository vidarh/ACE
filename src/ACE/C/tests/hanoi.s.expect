
	xref _AbsExecBase
	xref _LVOPermit
	xref _Ustringprint
	xref _Ushortprint
	xref _Ucodeprint
	xref _MathBase
	xref _LVOForbid
	xref _SUB_SHOW.MOVES
	xref _cls
	xref _inputshort
	xref _LVOSPFlt
	xref _power
	xref _MathTransBase
	xref _LVOSPSub
	xref _round
	xref _startup
	xref _cleanup
	xref _openmathffp
	xref _closemathffp
	xref _openmathtrans
	xref _closemathtrans
	xref _GfxBase
	xref _IntuitionBase
	xref _DosBase
	xref _opengfx
	xref _closegfx
	xref _openintuition
	xref _closeintuition
	xref _starterr
	xdef _EXIT_PROG
	xref _free_alloc

	SECTION code,CODE

	jsr	_startup
	cmpi.b	#1,_starterr
	bne.s	_START_PROG
	rts
_START_PROG:
	move.l	sp,_initialSP
	movem.l	d1-d7/a0-a6,-(sp)
	jsr	_openmathffp
	cmpi.b	#1,_starterr
	bne.s	_mathffp_ok
	jmp	_ABORT_PROG
_mathffp_ok:
	jsr	_openmathtrans
	cmpi.b	#1,_starterr
	bne.s	_mathtrans_ok
	jmp	_ABORT_PROG
_mathtrans_ok:
	jsr	_openintuition
	cmpi.b	#1,_starterr
	bne.s	_intuition_ok
	jmp	_ABORT_PROG
_intuition_ok:
	jsr	_opengfx
	cmpi.b	#1,_starterr
	bne.s	_gfx_ok
	jmp	_ABORT_PROG
_gfx_ok:
	link	a4,#-14

	jmp	_lab0
_SUB_SHOW.MOVES:
	link	a5,#-24
	move.l	_AbsExecBase,a6
	jsr	_LVOPermit(a6)
	move.w	-2(a5),-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	moveq	#-1,d5
	cmp.w	d1,d0
	beq.s	_lab1
	moveq	#0,d5
_lab1:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab2
	jmp	_lab3
_lab2:
	pea	_stringconst0
	jsr	_Ustringprint
	addq	#4,sp
	move.w	-4(a5),-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	_Ushortprint
	addq	#4,sp
	move.l	#2,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
	pea	_stringconst1
	jsr	_Ustringprint
	addq	#4,sp
	move.w	-6(a5),-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	_Ushortprint
	addq	#4,sp
	move.l	#2,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
	move.l	#0,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
	jmp	_lab4
_lab3:
	move.w	-2(a5),-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	sub.w	d1,d0
	move.w	d0,-(sp)
	move.w	(sp)+,-10(a5)
	move.w	-4(a5),-(sp)
	move.w	(sp)+,-12(a5)
	move.w	-8(a5),-(sp)
	move.w	(sp)+,-14(a5)
	move.w	-6(a5),-(sp)
	move.w	(sp)+,-16(a5)
	move.l	_AbsExecBase,a6
	jsr	_LVOForbid(a6)
	move.w	-10(a5),-10(sp)
	move.w	-12(a5),-12(sp)
	move.w	-14(a5),-14(sp)
	move.w	-16(a5),-16(sp)
	jsr	_SUB_SHOW.MOVES
	pea	_stringconst2
	jsr	_Ustringprint
	addq	#4,sp
	move.w	-4(a5),-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	_Ushortprint
	addq	#4,sp
	move.l	#2,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
	pea	_stringconst3
	jsr	_Ustringprint
	addq	#4,sp
	move.w	-6(a5),-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	_Ushortprint
	addq	#4,sp
	move.l	#2,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
	move.l	#0,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
	move.w	-2(a5),-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	sub.w	d1,d0
	move.w	d0,-(sp)
	move.w	(sp)+,-18(a5)
	move.w	-8(a5),-(sp)
	move.w	(sp)+,-20(a5)
	move.w	-6(a5),-(sp)
	move.w	(sp)+,-22(a5)
	move.w	-4(a5),-(sp)
	move.w	(sp)+,-24(a5)
	move.l	_AbsExecBase,a6
	jsr	_LVOForbid(a6)
	move.w	-18(a5),-10(sp)
	move.w	-20(a5),-12(sp)
	move.w	-22(a5),-14(sp)
	move.w	-24(a5),-16(sp)
	jsr	_SUB_SHOW.MOVES
_lab4:
_EXIT_SUB_SHOW.MOVES:
	unlk	a5
	rts	  
_lab0:
	jsr	_cls
_lab5:
	pea	_stringconst4
	jsr	_Ustringprint
	addq	#4,sp
	lea	_tempstring0,a0
	jsr	_inputshort
	move.w	d0,-4(a4)
	move.w	-4(a4),-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	moveq	#-1,d5
	cmp.w	d1,d0
	bge.s	_lab6
	moveq	#0,d5
_lab6:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab7
	jmp	_lab5
_lab7:
	pea	_stringconst5
	jsr	_Ustringprint
	addq	#4,sp
	move.w	-4(a4),-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	_Ushortprint
	addq	#4,sp
	move.l	#2,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
	move.w	-4(a4),-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	moveq	#-1,d5
	cmp.w	d1,d0
	beq.s	_lab8
	moveq	#0,d5
_lab8:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab9
	jmp	_lab10
_lab9:
	pea	_stringconst6
	jsr	_Ustringprint
	addq	#4,sp
	jmp	_lab11
_lab10:
	pea	_stringconst7
	jsr	_Ustringprint
	addq	#4,sp
_lab11:
	pea	_stringconst8
	jsr	_Ustringprint
	addq	#4,sp
	move.l	#0,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
	move.l	#0,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
	move.w	-4(a4),-(sp)
	move.w	(sp)+,-6(a4)
	move.w	#1,-(sp)
	move.w	(sp)+,-8(a4)
	move.w	#2,-(sp)
	move.w	(sp)+,-10(a4)
	move.w	#3,-(sp)
	move.w	(sp)+,-12(a4)
	move.l	_AbsExecBase,a6
	jsr	_LVOForbid(a6)
	move.w	-6(a4),-10(sp)
	move.w	-8(a4),-12(sp)
	move.w	-10(a4),-14(sp)
	move.w	-12(a4),-16(sp)
	jsr	_SUB_SHOW.MOVES
	move.w	#2,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.w	-4(a4),-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	jsr	_power
	add.l	#8,sp
	move.l	d0,-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	_MathBase,a6
	jsr	_LVOSPFlt(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d1
	move.l	(sp)+,d0
	move.l	_MathBase,a6
	jsr	_LVOSPSub(a6)
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	jsr	_round
	move.l	d0,-(sp)
	move.l	(sp)+,d0
	move.w	d0,-(sp)
	move.w	(sp)+,-14(a4)
	move.l	#0,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
	pea	_stringconst9
	jsr	_Ustringprint
	addq	#4,sp
	move.w	-14(a4),-(sp)
	move.w	(sp)+,d0
	ext.l	d0
	move.l	d0,-(sp)
	jsr	_Ushortprint
	addq	#4,sp
	move.l	#2,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
	move.w	-14(a4),-(sp)
	move.w	#1,-(sp)
	move.w	(sp)+,d1
	move.w	(sp)+,d0
	moveq	#-1,d5
	cmp.w	d1,d0
	beq.s	_lab12
	moveq	#0,d5
_lab12:
	move.l	d5,-(sp)
	move.l	(sp)+,d0
	cmpi.l	#0,d0
	bne.s	_lab13
	jmp	_lab14
_lab13:
	pea	_stringconst10
	jsr	_Ustringprint
	addq	#4,sp
	move.l	#0,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
	jmp	_lab15
_lab14:
	pea	_stringconst11
	jsr	_Ustringprint
	addq	#4,sp
	move.l	#0,-(sp)
	jsr	_Ucodeprint
	addq	#4,sp
_lab15:

_EXIT_PROG:
	unlk	a4
_ABORT_PROG:
	jsr	_free_alloc
	jsr	_closegfx
	jsr	_closeintuition
	jsr	_closemathtrans
	jsr	_closemathffp
	movem.l	(sp)+,d1-d7/a0-a6
	move.l	_initialSP,sp
	jsr	_cleanup

	rts

	SECTION data,DATA

_stringconst0:	dc.b "Move a ring from",0
_stringconst1:	dc.b "to",0
_stringconst2:	dc.b "Move a ring from",0
_stringconst3:	dc.b "to",0
_stringconst4:	dc.b "Enter number of rings (1 or higher)... ",0
_stringconst5:	dc.b "To move",0
_stringconst6:	dc.b "ring",0
_stringconst7:	dc.b "rings",0
_stringconst8:	dc.b " from peg 1 to peg 2:",0
_stringconst9:	dc.b "It takes",0
_stringconst10:	dc.b "move.",0
_stringconst11:	dc.b "moves.",0

	SECTION mem,BSS

_tempstring0:	ds.b 1024
_initialSP:	ds.l 1

	END
